16 Sep 15:44:36 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
16 Sep 15:44:38 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
16 Sep 15:44:38 CONFIG [org.geoserver] - Loading catalog /usr/local/geoserver/data
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'simple_roads'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'pophatch'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'burg'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'giant_polygon'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'poi'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'population'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'raster'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'simple_streams'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'polygon'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'tiger_roads'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'restricted'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'point'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'grass'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'dem'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'poly_landmarks'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'green'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'generic'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'capitals'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'cite_lakes'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'rain'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'line'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded default workspace 'ne'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded workspace 'it.geosolutions'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded workspace 'nurc'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded workspace 'cite'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded workspace 'tiger'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded workspace 'sf'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded workspace 'sde'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded workspace 'topp'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded workspace 'ne'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'coastline'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'countries_mapcolor9'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'boundary_lines'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'disputed'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'populated_places'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded style 'countries'
16 Sep 15:44:38 CONFIG [org.geoserver] - Loaded coverage store 'mosaic', enabled
16 Sep 15:44:39 CONFIG [org.geoserver] - Loaded coverage 'mosaic', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer 'mosaic'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer 'Arc_Sample'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded coverage store 'img_sample2', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded coverage 'Pk50095', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer 'Pk50095'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded coverage 'Img_Sample', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer 'Img_Sample'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded data store 'nyc', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded feature type 'poi', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer 'poi'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer 'poly_landmarks'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded feature type 'giant_polygon', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer 'giant_polygon'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded feature type 'tiger_roads', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer 'tiger_roads'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded data store 'sf', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded feature type 'restricted', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer 'restricted'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded feature type 'bugsites', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer 'bugsites'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded feature type 'streams', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer 'streams'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded feature type 'archsites', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer 'archsites'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded feature type 'roads', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer 'roads'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded coverage store 'sfdem', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded coverage 'sfdem', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer 'sfdem'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded data store 'taz_shapes', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer 'tasmania_cities'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer 'tasmania_water_bodies'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer 'tasmania_roads'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded data store 'states_shapefile', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded feature type 'states', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer 'states'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded data store 'NaturalEarth', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded feature type 'boundary_lines', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer 'boundary_lines'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded feature type 'disputed_areas', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer 'disputed_areas'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded feature type 'populated_places', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer 'populated_places'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded feature type 'countries', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer 'countries'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded feature type 'coastlines', enabled
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer 'coastlines'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer group 'world'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer group 'tasmania'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer group 'tiger-ny'
16 Sep 15:44:40 CONFIG [org.geoserver] - Loaded layer group 'spearfish'
16 Sep 15:44:40 CONFIG [org.geoserver] - Read catalog in 2.493 s
16 Sep 15:44:40 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/usr/local/geoserver/data/gwc'.
16 Sep 15:44:41 CONFIG [gwc.config] - Create configuration file 'gwc/geowebcache.xml' from template jar:file:/usr/local/geoserver/WEB-INF/lib/gwc-core-1.23.1.jar!/geowebcache_empty.xml
16 Sep 15:44:41 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
16 Sep 15:44:41 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
16 Sep 15:44:41 CONFIG [config.XMLConfiguration] - Initializing GridSets from gwc
16 Sep 15:44:41 CONFIG [config.XMLConfiguration] - Initializing layers from gwc
16 Sep 15:44:41 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
16 Sep 15:44:41 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
16 Sep 15:44:41 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
16 Sep 15:44:41 CONFIG [gwc.layer] - Loaded 0 tile layers in 3.122 ms
16 Sep 15:44:41 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
16 Sep 15:44:41 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOSERVER_DATA_DIR set to /usr/local/geoserver/data, using it as the default prefix.
16 Sep 15:44:41 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/usr/local/geoserver/data/gwc'.
16 Sep 15:44:41 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/usr/local/geoserver/data/gwc'.
16 Sep 15:44:41 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
16 Sep 15:44:41 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
16 Sep 15:44:41 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
16 Sep 15:44:41 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
16 Sep 15:44:41 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
16 Sep 15:44:41 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 500.0 MB
16 Sep 15:44:41 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
16 Sep 15:44:41 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
16 Sep 15:44:41 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl--3ef31051:182c1e8b194:-8000', enabled
16 Sep 15:44:41 CONFIG [org.geoserver] - Loaded service 'wms', enabled
16 Sep 15:44:41 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
16 Sep 15:44:41 CONFIG [org.geoserver] - Loaded service 'WFSInfoImpl-1c443fee:182c0f3f209:-7f97', enabled
16 Sep 15:44:41 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl-1c443fee:182c0f3f209:-7f98', enabled
16 Sep 15:44:41 CONFIG [org.geoserver] - Loaded service 'WMSInfoImpl-1c443fee:182c0f3f209:-7f99', enabled
16 Sep 15:44:41 CONFIG [org.geoserver] - Loaded service 'WCSInfoImpl-1c443fee:182c0f3f209:-7f96', enabled
16 Sep 15:44:41 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
16 Sep 15:44:43 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:44:46 CONFIG [platform.resource] - Notifying ENTRY_CREATE change on /usr/local/geoserver/data/gwc-layers. Created: 28, removed: 0, modified: 0
16 Sep 15:44:46 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
16 Sep 15:44:46 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
16 Sep 15:44:46 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
16 Sep 15:44:48 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
16 Sep 15:44:48 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
16 Sep 15:44:48 CONFIG [geoserver.security] - Start reloading user/groups for service named default
16 Sep 15:44:48 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
16 Sep 15:46:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:46:06 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:46:06 INFO   [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=polygon, WIDTH=20, HEIGHT=20}
	Layers = []
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=polygon, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=polygon, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@3826c3a5
16 Sep 15:46:15 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer agi:mopublic_grundstueck
16 Sep 15:46:16 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /usr/local/geoserver/data/gwc-layers. Created: 1, removed: 0, modified: 0
16 Sep 15:46:25 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:46:25 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:46:25 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2592560.5 : 2637054.0, 1223174.0 : 1246564.625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:2056, FORMAT=application/openlayers, BBOX=2592560.5,1223174.0,2637054.0,1246564.625, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=403, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
16 Sep 15:46:25 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:46:25 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:46:26 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2585489.5211120173 : 2644127.4430980794, 1219447.3580734306 : 1250216.9968239293]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2585489.5211120173,1219447.3580734306,2644127.4430980794,1250216.9968239293, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:46:27 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:46:27 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:46:27 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2601370.6249832422 : 2616030.105479758, 1226004.0397798799 : 1233696.4494675046]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 404
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2601370.6249832422,1226004.0397798799,2616030.105479758,1233696.4494675046, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=404, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:46:28 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:46:28 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:46:28 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2605517.4637044244 : 2609182.333828553, 1227633.6662738773 : 1229556.7686957836]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 404
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2605517.4637044244,1227633.6662738773,2609182.333828553,1229556.7686957836, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=404, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:46:28 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:46:28 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:46:29 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2606555.366376297 : 2607471.583907329, 1228049.4238384147 : 1228530.1994438912]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2606555.366376297,1228049.4238384147,2607471.583907329,1228530.1994438912, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:46:29 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:46:29 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:46:29 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2606809.706879594 : 2606930.1990288575, 1228138.651220142 : 1228259.143369405]
 layers: mopublic_grundstueck
 styles: polygon
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:mopublic_grundstueck, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2606809.706879594,1228138.651220142,2606930.1990288575,1228259.143369405, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:mopublic_grundstueck, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 15:46:33 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:46:33 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:46:33 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2602057.788131516 : 2609387.528379774, 1226199.6903984859 : 1230045.895242298]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2602057.788131516,1226199.6903984859,2609387.528379774,1230045.895242298, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:46:34 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:46:34 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:46:34 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2566096.250038502 : 2624734.172024564, 1211354.1032159794 : 1242123.741966478]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2566096.250038502,1211354.1032159794,2624734.172024564,1242123.741966478, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:46:36 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:46:36 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:46:36 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2588219.085839884 : 2602878.5663363994, 1223045.420669255 : 1230737.8303568799]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 404
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2588219.085839884,1223045.420669255,2602878.5663363994,1230737.8303568799, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=404, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:46:36 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:46:36 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:46:36 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2593759.3387228446 : 2597424.2088469733, 1225968.250032574 : 1227891.3524544802]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 404
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2593759.3387228446,1225968.250032574,2597424.2088469733,1227891.3524544802, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=404, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:46:37 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:46:37 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:46:37 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2595153.9458761998 : 2596070.1634072317, 1226702.5363481343 : 1227183.3119536107]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2595153.9458761998,1226702.5363481343,2596070.1634072317,1227183.3119536107, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:46:38 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:46:38 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:46:38 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2595694.332468873 : 2595814.8246181365, 1226864.8460414386 : 1226985.3381907018]
 layers: mopublic_grundstueck
 styles: polygon
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:mopublic_grundstueck, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2595694.332468873,1226864.8460414386,2595814.8246181365,1226985.3381907018, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:mopublic_grundstueck, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 15:46:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:46:44 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:46:44 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2595643.581686819 : 2595764.0738360826, 1226815.8090197453 : 1226936.3011690085]
 layers: mopublic_grundstueck
 styles: polygon
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:mopublic_grundstueck, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2595643.581686819,1226815.8090197453,2595764.0738360826,1226936.3011690085, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:mopublic_grundstueck, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 15:46:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:46:44 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:46:44 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2595652.4676682684 : 2595772.959817532, 1226850.5615255344 : 1226971.0536747975]
 layers: mopublic_grundstueck
 styles: polygon
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:mopublic_grundstueck, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2595652.4676682684,1226850.5615255344,2595772.959817532,1226971.0536747975, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:mopublic_grundstueck, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 15:46:45 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:46:45 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:46:45 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2595762.9717169106 : 2595883.463866174, 1226679.6632249013 : 1226800.1553741645]
 layers: mopublic_grundstueck
 styles: polygon
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:mopublic_grundstueck, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2595762.9717169106,1226679.6632249013,2595883.463866174,1226800.1553741645, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:mopublic_grundstueck, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 15:46:46 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:46:46 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:46:46 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2595155.1388677764 : 2596071.3563988083, 1226703.7293397111 : 1227184.5049451876]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2595155.1388677764,1226703.7293397111,2596071.3563988083,1227184.5049451876, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:46:55 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:46:55 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:46:55 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2593630.495632543 : 2597295.365756672, 1226025.5136282635 : 1227948.6160501698]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 404
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2593630.495632543,1226025.5136282635,2597295.365756672,1227948.6160501698, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=404, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:46:56 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:46:56 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:46:56 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2594861.6629398675 : 2598526.533063996, 1226154.3567185649 : 1228077.4591404712]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 404
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2594861.6629398675,1226154.3567185649,2598526.533063996,1228077.4591404712, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=404, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:46:58 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:46:58 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:46:58 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2575640.1826534206 : 2634278.1046394827, 1219523.70953435 : 1250293.3482848487]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2575640.1826534206,1219523.70953435,2634278.1046394827,1250293.3482848487, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:46:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:46:59 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:46:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2603689.8006086675 : 2611019.540856926, 1228022.5815279353 : 1231868.7863717475]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2603689.8006086675,1228022.5815279353,2611019.540856926,1231868.7863717475, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:47:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:00 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2603565.7294846736 : 2610895.469732932, 1227430.8577058103 : 1231277.0625496225]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2603565.7294846736,1227430.8577058103,2610895.469732932,1231277.0625496225, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:47:01 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:01 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:01 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2606498.1027806075 : 2608330.5378426723, 1228259.9868517315 : 1229221.5380626845]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2606498.1027806075,1228259.9868517315,2608330.5378426723,1229221.5380626845, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:47:02 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:02 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:02 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2607403.583387448 : 2607861.6921529644, 1228619.9720600503 : 1228860.3598627886]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2607403.583387448,1228619.9720600503,2607861.6921529644,1228860.3598627886, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:47:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:08 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:08 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2606502.874746915 : 2608335.3098089797, 1228336.3383126508 : 1229297.8895236037]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2606502.874746915,1228336.3383126508,2608335.3098089797,1229297.8895236037, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:47:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:08 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:08 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2607404.179883236 : 2607862.2886487525, 1228619.9720600503 : 1228860.3598627886]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2607404.179883236,1228619.9720600503,2607862.2886487525,1228860.3598627886, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:47:09 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:09 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:09 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2607629.804415211 : 2607744.33160659, 1228691.3278687415 : 1228751.4248194261]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 404
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2607629.804415211,1228691.3278687415,2607744.33160659,1228751.4248194261, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=404, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:47:11 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:11 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:11 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2607547.6371203545 : 2607776.6915031127, 1228679.4725149465 : 1228799.6664163158]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 404
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2607547.6371203545,1228679.4725149465,2607776.6915031127,1228799.6664163158, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=404, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:47:12 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:12 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:12 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2607696.104208514 : 2607726.22724583, 1228695.1299832845 : 1228725.2530206004]
 layers: mopublic_grundstueck
 styles: polygon
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:mopublic_grundstueck, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2607696.104208514,1228695.1299832845,2607726.22724583,1228725.2530206004, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:mopublic_grundstueck, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 15:47:13 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:13 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:13 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2607696.842364771 : 2607726.9654020867, 1228726.6914332046 : 1228756.8144705205]
 layers: mopublic_grundstueck
 styles: polygon
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:mopublic_grundstueck, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2607696.842364771,1228726.6914332046,2607726.9654020867,1228756.8144705205, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:mopublic_grundstueck, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 15:47:21 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:21 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:21 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2607592.896238302 : 2607650.159833991, 1228748.8524313385 : 1228778.9009066809]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 404
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2607592.896238302,1228748.8524313385,2607650.159833991,1228778.9009066809, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=404, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:47:22 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:22 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:22 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2607366.600648565 : 2608282.818179597, 1228402.549345167 : 1228883.3249506433]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2607366.600648565,1228402.549345167,2608282.818179597,1228883.3249506433, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:47:24 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:24 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:24 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2607547.33887246 : 2607776.3932552184, 1228679.4725149465 : 1228799.6664163158]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 404
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2607547.33887246,1228679.4725149465,2607776.3932552184,1228799.6664163158, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=404, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:47:26 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:26 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:26 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2607081.4756616945 : 2607997.6931927265, 1228520.6555112763 : 1229001.4311167528]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2607081.4756616945,1228520.6555112763,2607997.6931927265,1229001.4311167528, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:47:27 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:27 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:27 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2605216.829827055 : 2608881.6999511835, 1227881.8085218652 : 1229804.9109437715]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 404
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2605216.829827055,1227881.8085218652,2608881.6999511835,1229804.9109437715, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=404, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:47:29 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:29 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:29 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2597763.0184548027 : 2612422.498951318, 1225335.9644968356 : 1233028.3741844604]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 404
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2597763.0184548027,1225335.9644968356,2612422.498951318,1233028.3741844604, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=404, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:47:30 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:30 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:31 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2567928.685100566 : 2626566.607086628, 1215171.676261947 : 1245941.3150124457]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2567928.685100566,1215171.676261947,2626566.607086628,1245941.3150124457, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:47:31 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:31 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:31 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2597763.0184548027 : 2612422.498951318, 1225355.0523620655 : 1233047.4620496903]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 404
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2597763.0184548027,1225355.0523620655,2612422.498951318,1233047.4620496903, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=404, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:47:34 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:34 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:34 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2606266.6624146956 : 2608099.0974767604, 1227773.2462883706 : 1228734.7974993235]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2606266.6624146956,1227773.2462883706,2608099.0974767604,1228734.7974993235, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:47:35 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:35 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:35 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2605913.5369079434 : 2607745.971970008, 1228042.8623847421 : 1229004.413595695]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2605913.5369079434,1228042.8623847421,2607745.971970008,1229004.413595695, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:47:35 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:35 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:35 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2607034.650742302 : 2607263.7051250604, 1228373.4701754805 : 1228493.6640768498]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 404
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2607034.650742302,1228373.4701754805,2607263.7051250604,1228493.6640768498, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=404, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:47:38 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:38 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:38 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2607181.0999970525 : 2607211.2230343684, 1228389.7943236132 : 1228419.917360929]
 layers: mopublic_grundstueck
 styles: polygon
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:mopublic_grundstueck, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2607181.0999970525,1228389.7943236132,2607211.2230343684,1228419.917360929, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:mopublic_grundstueck, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 15:47:40 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:40 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:40 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2607201.1642309376 : 2607231.2872682535, 1228377.7931498257 : 1228407.9161871416]
 layers: mopublic_grundstueck
 styles: polygon
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:mopublic_grundstueck, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2607201.1642309376,1228377.7931498257,2607231.2872682535,1228407.9161871416, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:mopublic_grundstueck, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 15:47:42 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:42 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:42 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2607129.50602393 : 2607159.629061246, 1228365.153420816 : 1228395.2764581318]
 layers: mopublic_grundstueck
 styles: polygon
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:mopublic_grundstueck, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2607129.50602393,1228365.153420816,2607159.629061246,1228395.2764581318, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:mopublic_grundstueck, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 15:47:43 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:43 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:43 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2607137.7893931796 : 2607167.9124304955, 1228378.6088898545 : 1228408.7319271704]
 layers: mopublic_grundstueck
 styles: polygon
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:mopublic_grundstueck, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2607137.7893931796,1228378.6088898545,2607167.9124304955,1228408.7319271704, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:mopublic_grundstueck, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 15:47:45 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:45 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:45 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2605999.432301478 : 2607831.867363543, 1228100.1259804317 : 1229061.6771913846]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2605999.432301478,1228100.1259804317,2607831.867363543,1229061.6771913846, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:47:46 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:46 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:46 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2602449.089368728 : 2609778.829616986, 1227163.6275925927 : 1231009.832436405]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2602449.089368728,1227163.6275925927,2609778.829616986,1231009.832436405, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:47:47 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:47 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:47 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2606290.5222462327 : 2608122.9573082975, 1228166.933508736 : 1229128.484719689]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2606290.5222462327,1228166.933508736,2608122.9573082975,1229128.484719689, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:47:48 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:47:48 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:47:48 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2607260.424398224 : 2607718.5331637403, 1228415.374004618 : 1228655.7618073563]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2607260.424398224,1228415.374004618,2607718.5331637403,1228655.7618073563, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:53:47 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:53:47 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:53:47 INFO   [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=polygon, WIDTH=20, HEIGHT=20}
	Layers = []
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=polygon, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=polygon, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@3826c3a5
16 Sep 15:54:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:54:00 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:54:00 INFO   [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=agi:grundstueck, WIDTH=20, HEIGHT=20}
	Layers = []
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=grundstueck, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=agi:grundstueck, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@3826c3a5
16 Sep 15:54:05 INFO   [gwc.layer] - Truncating default style for layer agi:mopublic_grundstueck, as it changed from polygon to agi:grundstueck
16 Sep 15:54:05 INFO   [gwc.layer] - Truncating cached style polygon of layer agi:mopublic_grundstueck as it's no longer one of the layer's styles
16 Sep 15:54:05 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer agi:mopublic_grundstueck
16 Sep 15:54:05 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer agi:mopublic_grundstueck
16 Sep 15:54:06 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /usr/local/geoserver/data/gwc-layers. Created: 0, removed: 0, modified: 1
16 Sep 15:54:10 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:54:10 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:54:10 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2592560.5 : 2637054.0, 1223174.0 : 1246564.625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:2056, FORMAT=application/openlayers, BBOX=2592560.5,1223174.0,2637054.0,1246564.625, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=403, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
16 Sep 15:54:10 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:54:10 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:54:10 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2585489.5211120173 : 2644127.4430980794, 1219447.3580734306 : 1250216.9968239293]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2585489.5211120173,1219447.3580734306,2644127.4430980794,1250216.9968239293, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:54:11 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:54:11 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:54:12 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2594613.5206918796 : 2609273.001188395, 1224400.6591005735 : 1232093.0687881983]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 404
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2594613.5206918796,1224400.6591005735,2609273.001188395,1232093.0687881983, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=404, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:54:12 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:54:12 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:54:12 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2596851.572890078 : 2600516.443014207, 1225658.072222589 : 1227581.1746444954]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 404
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2596851.572890078,1225658.072222589,2600516.443014207,1227581.1746444954, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=404, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:54:13 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:54:13 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:54:13 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2597617.4734824253 : 2598533.6910134573, 1226036.8470482437 : 1226517.6226537202]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2597617.4734824253,1226036.8470482437,2598533.6910134573,1226517.6226537202, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:54:14 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:54:14 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:54:14 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2597745.1235811496 : 2598203.232346666, 1226100.3738497118 : 1226340.76165245]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2597745.1235811496,1226100.3738497118,2598203.232346666,1226340.76165245, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:54:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:54:15 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:54:15 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2597859.6809905157 : 2597919.9270651476, 1226140.9780869505 : 1226201.2241615823]
 layers: mopublic_grundstueck
 styles: grundstueck
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:mopublic_grundstueck, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2597859.6809905157,1226140.9780869505,2597919.9270651476,1226201.2241615823, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:mopublic_grundstueck, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 15:54:22 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:54:22 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:54:22 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2595510.6503576823 : 2599175.520481811, 1225443.3337387533 : 1227366.4361606597]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 404
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2595510.6503576823,1225443.3337387533,2599175.520481811,1227366.4361606597, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=404, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:54:23 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:54:23 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:54:23 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2597744.527085361 : 2598202.6358508775, 1226099.180858135 : 1226339.5686608732]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2597744.527085361,1226099.180858135,2598202.6358508775,1226339.5686608732, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:54:23 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:54:23 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:54:23 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2598033.982637481 : 2598094.2287121126, 1226162.1738934435 : 1226222.4199680754]
 layers: mopublic_grundstueck
 styles: grundstueck
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:mopublic_grundstueck, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2598033.982637481,1226162.1738934435,2598094.2287121126,1226222.4199680754, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:mopublic_grundstueck, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 15:55:33 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:55:33 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:55:33 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2598055.999827121 : 2598116.2459017527, 1226136.6367269626 : 1226196.8828015944]
 layers: mopublic_grundstueck
 styles: grundstueck
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:mopublic_grundstueck, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2598055.999827121,1226136.6367269626,2598116.2459017527,1226196.8828015944, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:mopublic_grundstueck, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 15:55:41 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:55:41 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:55:41 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2597823.8610252226 : 2598281.969790739, 1226046.0927329645 : 1226286.4805357028]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2597823.8610252226,1226046.0927329645,2598281.969790739,1226286.4805357028, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:55:42 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:55:42 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:55:42 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2597561.4028783124 : 2598019.511643829, 1226213.1115537256 : 1226453.4993564638]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2597561.4028783124,1226213.1115537256,2598019.511643829,1226453.4993564638, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:55:43 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:55:43 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:55:43 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2597360.980293399 : 2597819.0890589156, 1226342.5511398155 : 1226582.9389425537]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2597360.980293399,1226342.5511398155,2597819.0890589156,1226582.9389425537, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:55:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:55:44 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:55:44 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2596981.608971956 : 2597439.7177374726, 1226454.0958522523 : 1226694.4836549906]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2596981.608971956,1226454.0958522523,2597439.7177374726,1226694.4836549906, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:55:45 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:55:45 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:55:45 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2595138.4369857004 : 2598803.307109829, 1226058.9173924157 : 1227982.019814322]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 404
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2595138.4369857004,1226058.9173924157,2598803.307109829,1227982.019814322, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=404, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:55:46 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:55:46 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:55:46 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2588829.897527239 : 2603489.3780237543, 1224686.977079021 : 1232379.3867666458]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 404
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2588829.897527239,1224686.977079021,2603489.3780237543,1232379.3867666458, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=404, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:55:47 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:55:47 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:55:47 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2594155.4119263636 : 2597820.2820504922, 1226369.0952024006 : 1228292.197624307]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 404
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2594155.4119263636,1226369.0952024006,2597820.2820504922,1228292.197624307, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=404, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:55:48 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:55:48 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:55:48 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2595486.7905261447 : 2596403.0080571766, 1226787.2387500918 : 1227268.0143555682]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2595486.7905261447,1226787.2387500918,2596403.0080571766,1227268.0143555682, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:55:49 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:55:49 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:55:49 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2595819.63517609 : 2596048.6895588483, 1226892.0728849086 : 1227012.266786278]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 404
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2595819.63517609,1226892.0728849086,2596048.6895588483,1227012.266786278, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=404, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:55:50 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:55:50 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:55:50 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2595938.280897106 : 2595968.403934422, 1226916.1023558578 : 1226946.2253931738]
 layers: mopublic_grundstueck
 styles: grundstueck
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:mopublic_grundstueck, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2595938.280897106,1226916.1023558578,2595968.403934422,1226946.2253931738, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:mopublic_grundstueck, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 15:55:51 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:55:51 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:55:51 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2595957.489452249 : 2595987.612489565, 1226924.6300721217 : 1226954.7531094376]
 layers: mopublic_grundstueck
 styles: grundstueck
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:mopublic_grundstueck, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2595957.489452249,1226924.6300721217,2595987.612489565,1226954.7531094376, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:mopublic_grundstueck, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 15:55:51 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:55:51 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:55:51 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2595945.040588057 : 2595975.163625373, 1226949.5943528924 : 1226979.7173902083]
 layers: mopublic_grundstueck
 styles: grundstueck
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:mopublic_grundstueck, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2595945.040588057,1226949.5943528924,2595975.163625373,1226979.7173902083, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:mopublic_grundstueck, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 15:55:53 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:55:53 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:55:53 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2595905.083197783 : 2595962.3467934723, 1226941.3210684413 : 1226971.3695437836]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 404
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2595905.083197783,1226941.3210684413,2595962.3467934723,1226971.3695437836, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=404, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:55:54 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:55:54 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:55:54 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2595705.704480499 : 2596163.8132460155, 1226826.309224234 : 1227066.6970269722]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2595705.704480499,1226826.309224234,2596163.8132460155,1227066.6970269722, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:55:55 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:55:55 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:55:55 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2595021.523811167 : 2596853.958873232, 1226432.3237559744 : 1227393.8749669273]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2595021.523811167,1226432.3237559744,2596853.958873232,1227393.8749669273, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:55:56 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:55:56 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:55:56 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2592284.801133839 : 2599614.541382097, 1224863.5398323971 : 1228709.7446762093]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2592284.801133839,1224863.5398323971,2599614.541382097,1228709.7446762093, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:55:57 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:55:57 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:55:58 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2595021.523811167 : 2596853.958873232, 1226437.095722282 : 1227398.646933235]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2595021.523811167,1226437.095722282,2596853.958873232,1227398.646933235, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:55:58 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:55:58 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:55:58 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2595477.24659353 : 2596393.4641245618, 1226698.9573734037 : 1227179.7329788802]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2595477.24659353,1226698.9573734037,2596393.4641245618,1227179.7329788802, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 15:56:02 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:56:02 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:56:02 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2591740.796974789 : 2599070.537223047, 1224968.5230911614 : 1228814.7279349735]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2591740.796974789,1224968.5230911614,2599070.537223047,1228814.7279349735, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:56:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:56:03 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:56:03 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2595558.3700207565 : 2602888.1102690147, 1224644.029382254 : 1228490.2342260662]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2595558.3700207565,1224644.029382254,2602888.1102690147,1228490.2342260662, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:56:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:56:04 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:56:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2599776.7882365505 : 2607106.5284848087, 1226314.217589865 : 1230160.4224336771]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2599776.7882365505,1226314.217589865,2607106.5284848087,1230160.4224336771, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:56:10 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:56:10 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:56:10 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2599776.7882365505 : 2607106.5284848087, 1226314.217589865 : 1230160.4224336771]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png8
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png8, SRS=EPSG:2056, BBOX=2599776.7882365505,1226314.217589865,2607106.5284848087,1230160.4224336771, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:56:11 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:56:11 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:56:11 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2604610.790106007 : 2606443.2251680717, 1228209.8812055031 : 1229171.432416456]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png8
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png8, SRS=EPSG:2056, BBOX=2604610.790106007,1228209.8812055031,2606443.2251680717,1229171.432416456, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:56:14 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:56:14 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:56:14 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2604610.790106007 : 2606443.2251680717, 1228209.8812055031 : 1229171.432416456]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:2056, BBOX=2604610.790106007,1228209.8812055031,2606443.2251680717,1229171.432416456, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:56:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:56:15 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:56:15 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2605746.5180871827 : 2606204.626852699, 1228424.917937233 : 1228665.3057399713]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:2056, BBOX=2605746.5180871827,1228424.917937233,2606204.626852699,1228665.3057399713, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:56:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:56:16 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:56:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2606000.028797266 : 2606458.1375627825, 1228462.4971719042 : 1228702.8849746424]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:2056, BBOX=2606000.028797266,1228462.4971719042,2606458.1375627825,1228702.8849746424, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 15:56:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:56:19 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:56:19 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2605871.1857069647 : 2606586.980653084, 1228462.4971719042 : 1228702.8849746424]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:2056, BBOX=2605871.1857069647,1228462.4971719042,2606586.980653084,1228702.8849746424, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=1201, HEIGHT=403, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 1201
16 Sep 15:56:22 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:56:22 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:56:22 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2605871.1857069647 : 2606586.980653084, 1228373.9175473219 : 1228791.4645992247]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 701
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:2056, BBOX=2605871.1857069647,1228373.9175473219,2606586.980653084,1228791.4645992247, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=1201, HEIGHT=701, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 1201
16 Sep 15:56:23 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:56:23 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:56:23 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2606238.0306168506 : 2606953.82556297, 1228308.3030105943 : 1228725.8500624972]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 701
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:2056, BBOX=2606238.0306168506,1228308.3030105943,2606953.82556297,1228725.8500624972, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=1201, HEIGHT=701, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 1201
16 Sep 15:56:25 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:56:25 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:56:25 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2606538.6644942206 : 2607254.45944034, 1228137.1087193142 : 1228554.655771217]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 701
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:2056, BBOX=2606538.6644942206,1228137.1087193142,2607254.45944034,1228554.655771217, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=1201, HEIGHT=701, TRANSPARENT=true, LAYERS=agi:mopublic_grundstueck}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=grundstueck]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 1201
16 Sep 15:56:26 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:56:26 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:56:26 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/jpeg
 width height: 101,101
 bbox: SRSEnvelope[2606861.190029158 : 2606921.4361037896, 1228357.788223291 : 1228418.0342979229]
 layers: mopublic_grundstueck
 styles: grundstueck
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	RawKvp = {FORMAT=image/jpeg, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:mopublic_grundstueck, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2606861.190029158,1228357.788223291,2606921.4361037896,1228418.0342979229, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:mopublic_grundstueck, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 15:56:27 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:56:27 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:56:27 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/jpeg
 width height: 101,101
 bbox: SRSEnvelope[2606903.766954861 : 2606964.013029493, 1228336.1583882007 : 1228396.4044628325]
 layers: mopublic_grundstueck
 styles: grundstueck
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	RawKvp = {FORMAT=image/jpeg, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:mopublic_grundstueck, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2606903.766954861,1228336.1583882007,2606964.013029493,1228396.4044628325, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:mopublic_grundstueck, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 15:56:29 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 15:56:29 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 15:56:29 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/jpeg
 width height: 101,101
 bbox: SRSEnvelope[2606932.6119533493 : 2606992.858027981, 1228250.2719872482 : 1228310.51806188]
 layers: mopublic_grundstueck
 styles: grundstueck
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	RawKvp = {FORMAT=image/jpeg, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:mopublic_grundstueck, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2606932.6119533493,1228250.2719872482,2606992.858027981,1228310.51806188, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:mopublic_grundstueck, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:00:22 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:00:22 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:00:22 INFO   [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=point, WIDTH=20, HEIGHT=20}
	Layers = []
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=point, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=point, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@3826c3a5
16 Sep 16:00:29 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer agi:invntr_hhtsgrnzen_kantonsgrenzstein
16 Sep 16:00:32 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /usr/local/geoserver/data/gwc-layers. Created: 1, removed: 0, modified: 0
16 Sep 16:00:39 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:00:39 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:00:39 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2595066.5 : 2644759.75, 1213707.625 : 1261107.625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 732
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:2056, FORMAT=application/openlayers, BBOX=2595066.5,1213707.625,2644759.75,1261107.625, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=732, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
16 Sep 16:00:40 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:00:40 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:00:40 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2590605.0689936136 : 2649242.9909796757, 1209483.492423455 : 1265372.7618164208]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2590605.0689936136,1209483.492423455,2649242.9909796757,1265372.7618164208, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:00:43 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:00:43 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:00:43 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2615801.051097 : 2630460.5315935155, 1235175.7590228172 : 1249148.0763710586]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 732
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2615801.051097,1235175.7590228172,2630460.5315935155,1249148.0763710586, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=732, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:00:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:00:44 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:00:44 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2622152.5382522284 : 2625817.408376357, 1241450.8947171264 : 1244943.9740541868]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2622152.5382522284,1241450.8947171264,2625817.408376357,1244943.9740541868, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:00:45 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:00:45 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:00:45 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2624345.161237977 : 2624827.1298350305, 1243330.4168305208 : 1243812.3854275744]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2624345.161237977,1243330.4168305208,2624827.1298350305,1243812.3854275744, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:00:46 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:00:46 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:00:46 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2624368.2282660296 : 2624850.196863083, 1243331.6870053906 : 1243813.6556024442]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2624368.2282660296,1243331.6870053906,2624850.196863083,1243813.6556024442, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:01:09 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:01:09 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:01:09 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2615247.5030053346 : 2629906.98350185, 1237332.6877937887 : 1251305.00514203]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 732
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2615247.5030053346,1237332.6877937887,2629906.98350185,1251305.00514203, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=732, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:01:09 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:01:09 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:01:09 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2587092.9017913234 : 2645730.8237773855, 1220096.345491245 : 1275985.6148842108]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2587092.9017913234,1220096.345491245,2645730.8237773855,1275985.6148842108, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:01:10 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:01:10 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:01:10 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2474398.14547436 : 2708949.833418609, 1151380.0306638281 : 1374937.108235691]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2474398.14547436,1151380.0306638281,2708949.833418609,1374937.108235691, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:01:11 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:01:11 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:01:11 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2587016.550330404 : 2645654.4723164663, 1220478.1027958419 : 1276367.3721888077]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2587016.550330404,1220478.1027958419,2645654.4723164663,1276367.3721888077, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:01:12 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:01:12 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:01:12 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2615190.239409645 : 2629849.7199061606, 1237771.708694075 : 1251744.0260423163]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 732
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2615190.239409645,1237771.708694075,2629849.7199061606,1251744.0260423163, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=732, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:01:13 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:01:13 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:01:13 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2622233.661679455 : 2625898.5318035837, 1242090.3382023259 : 1245583.4175393863]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2622233.661679455,1242090.3382023259,2625898.5318035837,1245583.4175393863, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:01:25 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:01:25 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:01:25 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2602554.0726274922 : 2631873.0336205233, 1233305.148230293 : 1261249.7829267757]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 732
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2602554.0726274922,1233305.148230293,2631873.0336205233,1261249.7829267757, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=732, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:01:26 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:01:26 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:01:26 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2535173.9083661637 : 2652449.752338289, 1203146.321167149 : 1314924.8599530803]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 732
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2535173.9083661637,1203146.321167149,2652449.752338289,1314924.8599530803, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=732, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 16:09:41 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
16 Sep 16:09:43 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
16 Sep 16:09:43 CONFIG [org.geoserver] - Loading catalog /usr/local/geoserver/data
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'simple_roads'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'burg'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'pophatch'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'giant_polygon'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'poi'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'population'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'polygon'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'raster'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'simple_streams'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'grass'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'dem'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'poly_landmarks'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'restricted'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'point'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'tiger_roads'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'green'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'line'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'generic'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'cite_lakes'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'capitals'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'rain'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded default workspace 'agi'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded workspace 'agi'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'grundstueck'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded workspace 'cite'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded workspace 'nurc'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded workspace 'it.geosolutions'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded workspace 'sde'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded workspace 'topp'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded workspace 'tiger'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded workspace 'ne'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'coastline'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'populated_places'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'countries_mapcolor9'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'boundary_lines'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'disputed'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded style 'countries'
16 Sep 16:09:43 CONFIG [org.geoserver] - Loaded workspace 'sf'
16 Sep 16:09:44 CONFIG [org.geoserver] - Loaded data store 'agi_mopublic_pub', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded feature type 'mopublic_grundstueck', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded layer 'mopublic_grundstueck'
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded data store 'agi_inventar_hoheitsgrenzen_pub', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded feature type 'invntr_hhtsgrnzen_kantonsgrenzstein', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded layer 'invntr_hhtsgrnzen_kantonsgrenzstein'
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded layer 'Arc_Sample'
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded coverage store 'img_sample2', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded coverage 'Pk50095', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded layer 'Pk50095'
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded coverage store 'mosaic', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded coverage 'mosaic', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded layer 'mosaic'
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded coverage 'Img_Sample', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded layer 'Img_Sample'
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded data store 'nyc', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded layer 'poly_landmarks'
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded feature type 'poi', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded layer 'poi'
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded feature type 'tiger_roads', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded layer 'tiger_roads'
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded feature type 'giant_polygon', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded layer 'giant_polygon'
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded data store 'sf', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded feature type 'bugsites', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded layer 'bugsites'
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded feature type 'roads', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded layer 'roads'
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded feature type 'restricted', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded layer 'restricted'
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded feature type 'streams', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded layer 'streams'
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded feature type 'archsites', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded layer 'archsites'
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded coverage store 'sfdem', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded coverage 'sfdem', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded layer 'sfdem'
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded data store 'states_shapefile', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded feature type 'states', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded layer 'states'
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded data store 'taz_shapes', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded layer 'tasmania_water_bodies'
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded layer 'tasmania_cities'
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded layer 'tasmania_roads'
16 Sep 16:09:45 CONFIG [org.geoserver] - Loaded data store 'NaturalEarth', enabled
16 Sep 16:09:46 CONFIG [org.geoserver] - Loaded feature type 'boundary_lines', enabled
16 Sep 16:09:46 CONFIG [org.geoserver] - Loaded layer 'boundary_lines'
16 Sep 16:09:46 CONFIG [org.geoserver] - Loaded feature type 'populated_places', enabled
16 Sep 16:09:46 CONFIG [org.geoserver] - Loaded layer 'populated_places'
16 Sep 16:09:46 CONFIG [org.geoserver] - Loaded feature type 'disputed_areas', enabled
16 Sep 16:09:46 CONFIG [org.geoserver] - Loaded layer 'disputed_areas'
16 Sep 16:09:46 CONFIG [org.geoserver] - Loaded feature type 'countries', enabled
16 Sep 16:09:46 CONFIG [org.geoserver] - Loaded layer 'countries'
16 Sep 16:09:46 CONFIG [org.geoserver] - Loaded feature type 'coastlines', enabled
16 Sep 16:09:46 CONFIG [org.geoserver] - Loaded layer 'coastlines'
16 Sep 16:09:46 CONFIG [org.geoserver] - Loaded layer group 'world'
16 Sep 16:09:46 CONFIG [org.geoserver] - Loaded layer group 'tiger-ny'
16 Sep 16:09:46 CONFIG [org.geoserver] - Loaded layer group 'tasmania'
16 Sep 16:09:46 CONFIG [org.geoserver] - Loaded layer group 'spearfish'
16 Sep 16:09:46 CONFIG [org.geoserver] - Read catalog in 2.522 s
16 Sep 16:09:46 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/usr/local/geoserver/data/gwc'.
16 Sep 16:09:46 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
16 Sep 16:09:46 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
16 Sep 16:09:46 CONFIG [config.XMLConfiguration] - Initializing GridSets from gwc
16 Sep 16:09:46 CONFIG [config.XMLConfiguration] - Initializing layers from gwc
16 Sep 16:09:46 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
16 Sep 16:09:46 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
16 Sep 16:09:46 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
16 Sep 16:09:46 CONFIG [gwc.layer] - Loaded 30 tile layers in 38.29 ms
16 Sep 16:09:46 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
16 Sep 16:09:46 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOSERVER_DATA_DIR set to /usr/local/geoserver/data, using it as the default prefix.
16 Sep 16:09:46 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/usr/local/geoserver/data/gwc'.
16 Sep 16:09:46 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/usr/local/geoserver/data/gwc'.
16 Sep 16:09:46 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
16 Sep 16:09:46 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
16 Sep 16:09:46 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
16 Sep 16:09:46 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
16 Sep 16:09:46 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
16 Sep 16:09:46 CONFIG [diskquota.DiskQuotaMonitor] - 30 layers attached to global quota 500.0 MB
16 Sep 16:09:46 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
16 Sep 16:09:46 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
16 Sep 16:09:46 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl--3ef31051:182c1e8b194:-8000', enabled
16 Sep 16:09:46 CONFIG [org.geoserver] - Loaded service 'wms', enabled
16 Sep 16:09:46 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
16 Sep 16:09:46 CONFIG [org.geoserver] - Loaded service 'WFSInfoImpl-1c443fee:182c0f3f209:-7f97', enabled
16 Sep 16:09:46 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl-1c443fee:182c0f3f209:-7f98', enabled
16 Sep 16:09:46 CONFIG [org.geoserver] - Loaded service 'WMSInfoImpl-1c443fee:182c0f3f209:-7f99', enabled
16 Sep 16:09:46 CONFIG [org.geoserver] - Loaded service 'WCSInfoImpl-1c443fee:182c0f3f209:-7f96', enabled
16 Sep 16:09:46 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
16 Sep 16:09:47 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:09:49 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
16 Sep 16:09:49 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
16 Sep 16:09:49 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
16 Sep 16:09:51 CONFIG [geoserver.security] - Start reloading user/groups for service named default
16 Sep 16:09:51 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
16 Sep 16:09:52 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
16 Sep 16:09:52 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
16 Sep 16:10:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:10:03 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:10:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2608490.398713972 : 2623149.8792104875, 1250751.457050365 : 1264723.7743986063]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 732
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2608490.398713972,1250751.457050365,2623149.8792104875,1264723.7743986063, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=732, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:10:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:10:05 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:10:05 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2616435.722615892 : 2620100.5927400207, 1253729.1640262196 : 1257222.24336328]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2616435.722615892,1253729.1640262196,2620100.5927400207,1257222.24336328, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:10:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:10:06 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:10:06 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2618272.3331484753 : 2618730.4419139917, 1254905.4537210085 : 1255342.088638141]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2618272.3331484753,1254905.4537210085,2618730.4419139917,1255342.088638141, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 16:10:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:10:08 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:10:08 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2618519.580215893 : 2618579.826290525, 1255025.5031221465 : 1255085.7491967783]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2618519.580215893,1255025.5031221465,2618579.826290525,1255085.7491967783, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:10:12 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:10:12 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:10:12 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2618554.2836447586 : 2618614.5297193904, 1255198.9287387365 : 1255259.1748133684]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2618554.2836447586,1255198.9287387365,2618614.5297193904,1255259.1748133684, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:11:22 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer agi:invntr_hhtsgrnzen_kantonsgrenzstein
16 Sep 16:11:25 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:11:25 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:11:25 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2617378.185961615 : 2619210.6210236796, 1254454.5029049534 : 1256201.0425734837]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2617378.185961615,1254454.5029049534,2619210.6210236796,1256201.0425734837, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 16:11:26 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /usr/local/geoserver/data/gwc-layers. Created: 0, removed: 0, modified: 1
16 Sep 16:11:26 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:11:26 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:11:26 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2618258.613745341 : 2618716.7225108575, 1254873.2429484332 : 1255309.8778655657]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2618258.613745341,1254873.2429484332,2618716.7225108575,1255309.8778655657, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 16:11:27 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:11:27 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:11:27 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2618519.3678162093 : 2618579.613890841, 1255022.6588813947 : 1255082.9049560265]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2618519.3678162093,1255022.6588813947,2618579.613890841,1255082.9049560265, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:11:29 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:11:29 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:11:29 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2618554.820505531 : 2618615.066580163, 1255196.8153181882 : 1255257.06139282]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2618554.820505531,1255196.8153181882,2618615.066580163,1255257.06139282, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:12:02 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:12:02 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:12:02 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2595066.5 : 2644759.75, 1213707.625 : 1261107.625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 732
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:2056, FORMAT=application/openlayers, BBOX=2595066.5,1213707.625,2644759.75,1261107.625, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=732, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
16 Sep 16:12:02 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:12:02 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:12:02 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2590605.0689936136 : 2649242.9909796757, 1209483.492423455 : 1265372.7618164208]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2590605.0689936136,1209483.492423455,2649242.9909796757,1265372.7618164208, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:12:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:12:04 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:12:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2624247.4314612034 : 2627912.301585332, 1240744.6437036223 : 1244237.7230406827]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2624247.4314612034,1240744.6437036223,2627912.301585332,1244237.7230406827, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:12:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:12:05 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:12:05 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2625957.966434238 : 2626439.9350312916, 1242826.0001280466 : 1243307.9687251002]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2625957.966434238,1242826.0001280466,2626439.9350312916,1243307.9687251002, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:12:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:12:08 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:12:08 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2625961.583272471 : 2626443.5518695246, 1242798.2397732676 : 1243280.2083703212]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2625961.583272471,1242798.2397732676,2626443.5518695246,1243280.2083703212, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:12:09 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:12:09 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:12:09 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2625961.583272471 : 2626443.5518695246, 1242798.2397732676 : 1243280.2083703212]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2625961.583272471,1242798.2397732676,2626443.5518695246,1243280.2083703212, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:12:09 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:12:09 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:12:09 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2625961.583272471 : 2626443.5518695246, 1242805.27932647 : 1243287.2479235237]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2625961.583272471,1242805.27932647,2626443.5518695246,1243287.2479235237, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:12:10 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:12:10 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:12:10 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2625961.583272471 : 2626443.5518695246, 1242805.27932647 : 1243287.2479235237]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2625961.583272471,1242805.27932647,2626443.5518695246,1243287.2479235237, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:12:11 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:12:11 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:12:11 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2625961.583272471 : 2626443.5518695246, 1242805.27932647 : 1243287.2479235237]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2625961.583272471,1242805.27932647,2626443.5518695246,1243287.2479235237, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:12:11 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:12:11 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:12:11 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2625961.583272471 : 2626443.5518695246, 1242805.27932647 : 1243287.2479235237]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2625961.583272471,1242805.27932647,2626443.5518695246,1243287.2479235237, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:12:12 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:12:12 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:12:12 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2625961.583272471 : 2626443.5518695246, 1242805.27932647 : 1243287.2479235237]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2625961.583272471,1242805.27932647,2626443.5518695246,1243287.2479235237, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:12:13 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:12:13 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:12:13 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2625961.583272471 : 2626443.5518695246, 1242805.27932647 : 1243287.2479235237]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2625961.583272471,1242805.27932647,2626443.5518695246,1243287.2479235237, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:12:13 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:12:13 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:12:13 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2625961.583272471 : 2626443.5518695246, 1242805.27932647 : 1243287.2479235237]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2625961.583272471,1242805.27932647,2626443.5518695246,1243287.2479235237, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:12:52 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:12:52 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:12:52 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2595066.5 : 2644759.75, 1213707.625 : 1261107.625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 732
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:2056, FORMAT=application/openlayers, BBOX=2595066.5,1213707.625,2644759.75,1261107.625, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=732, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
16 Sep 16:12:52 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:12:52 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:12:52 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2590605.0689936136 : 2649242.9909796757, 1209483.492423455 : 1265372.7618164208]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2590605.0689936136,1209483.492423455,2649242.9909796757,1265372.7618164208, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:12:53 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:12:53 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:12:53 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2614961.185026887 : 2629620.6655234024, 1235290.2862141961 : 1249262.6035624375]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 732
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2614961.185026887,1235290.2862141961,2629620.6655234024,1249262.6035624375, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=732, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:12:54 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:12:54 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:12:54 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2621136.1094287396 : 2624800.9795528683, 1241737.212695574 : 1245230.2920326344]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2621136.1094287396,1241737.212695574,2624800.9795528683,1245230.2920326344, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:12:55 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:12:55 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:12:55 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2623174.904072861 : 2623656.8726699147, 1243723.5146909116 : 1244205.4832879652]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2623174.904072861,1243723.5146909116,2623656.8726699147,1244205.4832879652, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:12:55 ERROR  [freemarker.runtime] - Error executing FreeMarker template
FreeMarker template error:
The following has evaluated to null or missing:
==> type.title  [in template "content.ftl" at line 6, column 34]

----
Tip: It's the step after the last dot that caused this error, not those before it.
----
Tip: If the failing expression is known to legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${type.title}  [in template "content.ftl" at line 6, column 32]
----

Java stack trace (for programmers):
----
freemarker.core.InvalidReferenceException: [... Exception message was already printed; see it above ...]
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:134)
	at freemarker.core.EvalUtil.coerceModelToTextualCommon(EvalUtil.java:481)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:401)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:370)
	at freemarker.core.DollarVariable.calculateInterpolatedStringOrMarkup(DollarVariable.java:100)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:63)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:353)
	at freemarker.core.Environment.process(Environment.java:326)
	at freemarker.template.Template.process(Template.java:383)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:233)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:90)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
16 Sep 16:12:55 INFO   [geoserver.servlets] - OutputStream was successfully aborted.
16 Sep 16:12:55 ERROR  [geoserver.ows] - 
java.io.IOException: Error occurred processing content template content.ftl for featureType invntr_hhtsgrnzen_kantonsgrenzstein
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:241)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:90)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: freemarker.core.InvalidReferenceException: The following has evaluated to null or missing:
==> type.title  [in template "content.ftl" at line 6, column 34]

----
Tip: It's the step after the last dot that caused this error, not those before it.
----
Tip: If the failing expression is known to legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${type.title}  [in template "content.ftl" at line 6, column 32]
----
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:134)
	at freemarker.core.EvalUtil.coerceModelToTextualCommon(EvalUtil.java:481)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:401)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:370)
	at freemarker.core.DollarVariable.calculateInterpolatedStringOrMarkup(DollarVariable.java:100)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:63)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:353)
	at freemarker.core.Environment.process(Environment.java:326)
	at freemarker.template.Template.process(Template.java:383)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:233)
	... 112 more
16 Sep 16:13:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:13:08 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:13:08 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2623402.4439155315 : 2623884.412512585, 1243514.1188928646 : 1243996.087489918]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2623402.4439155315,1243514.1188928646,2623884.412512585,1243996.087489918, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:13:08 ERROR  [freemarker.runtime] - Error executing FreeMarker template
FreeMarker template error:
The following has evaluated to null or missing:
==> type.title  [in template "content.ftl" at line 6, column 34]

----
Tip: It's the step after the last dot that caused this error, not those before it.
----
Tip: If the failing expression is known to legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${type.title}  [in template "content.ftl" at line 6, column 32]
----

Java stack trace (for programmers):
----
freemarker.core.InvalidReferenceException: [... Exception message was already printed; see it above ...]
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:134)
	at freemarker.core.EvalUtil.coerceModelToTextualCommon(EvalUtil.java:481)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:401)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:370)
	at freemarker.core.DollarVariable.calculateInterpolatedStringOrMarkup(DollarVariable.java:100)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:63)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:353)
	at freemarker.core.Environment.process(Environment.java:326)
	at freemarker.template.Template.process(Template.java:383)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:233)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:90)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
16 Sep 16:13:08 INFO   [geoserver.servlets] - OutputStream was successfully aborted.
16 Sep 16:13:08 ERROR  [geoserver.ows] - 
java.io.IOException: Error occurred processing content template content.ftl for featureType invntr_hhtsgrnzen_kantonsgrenzstein
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:241)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:90)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: freemarker.core.InvalidReferenceException: The following has evaluated to null or missing:
==> type.title  [in template "content.ftl" at line 6, column 34]

----
Tip: It's the step after the last dot that caused this error, not those before it.
----
Tip: If the failing expression is known to legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${type.title}  [in template "content.ftl" at line 6, column 32]
----
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:134)
	at freemarker.core.EvalUtil.coerceModelToTextualCommon(EvalUtil.java:481)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:401)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:370)
	at freemarker.core.DollarVariable.calculateInterpolatedStringOrMarkup(DollarVariable.java:100)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:63)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:353)
	at freemarker.core.Environment.process(Environment.java:326)
	at freemarker.template.Template.process(Template.java:383)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:233)
	... 112 more
16 Sep 16:13:23 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:13:23 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:13:23 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2623402.4439155315 : 2623884.412512585, 1243514.1188928646 : 1243996.087489918]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2623402.4439155315,1243514.1188928646,2623884.412512585,1243996.087489918, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:13:23 ERROR  [freemarker.runtime] - Error executing FreeMarker template
FreeMarker template error:
The following has evaluated to null or missing:
==> type.title  [in template "content.ftl" at line 6, column 34]

----
Tip: It's the step after the last dot that caused this error, not those before it.
----
Tip: If the failing expression is known to legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${type.title}  [in template "content.ftl" at line 6, column 32]
----

Java stack trace (for programmers):
----
freemarker.core.InvalidReferenceException: [... Exception message was already printed; see it above ...]
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:134)
	at freemarker.core.EvalUtil.coerceModelToTextualCommon(EvalUtil.java:481)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:401)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:370)
	at freemarker.core.DollarVariable.calculateInterpolatedStringOrMarkup(DollarVariable.java:100)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:63)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:353)
	at freemarker.core.Environment.process(Environment.java:326)
	at freemarker.template.Template.process(Template.java:383)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:233)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:90)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
16 Sep 16:13:23 INFO   [geoserver.servlets] - OutputStream was successfully aborted.
16 Sep 16:13:23 ERROR  [geoserver.ows] - 
java.io.IOException: Error occurred processing content template content.ftl for featureType invntr_hhtsgrnzen_kantonsgrenzstein
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:241)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:90)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: freemarker.core.InvalidReferenceException: The following has evaluated to null or missing:
==> type.title  [in template "content.ftl" at line 6, column 34]

----
Tip: It's the step after the last dot that caused this error, not those before it.
----
Tip: If the failing expression is known to legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${type.title}  [in template "content.ftl" at line 6, column 32]
----
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:134)
	at freemarker.core.EvalUtil.coerceModelToTextualCommon(EvalUtil.java:481)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:401)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:370)
	at freemarker.core.DollarVariable.calculateInterpolatedStringOrMarkup(DollarVariable.java:100)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:63)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:353)
	at freemarker.core.Environment.process(Environment.java:326)
	at freemarker.template.Template.process(Template.java:383)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:233)
	... 112 more
16 Sep 16:15:36 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:15:36 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:15:36 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2622832.543451041 : 2624664.978513106, 1241818.3361228006 : 1243564.8757913308]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2622832.543451041,1241818.3361228006,2624664.978513106,1243564.8757913308, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 16:15:37 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:15:37 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:15:37 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2623644.9707148867 : 2624561.1882459186, 1241942.4072467946 : 1242815.6770810597]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2623644.9707148867,1241942.4072467946,2624561.1882459186,1242815.6770810597, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:15:41 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:15:41 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:15:41 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2619351.3940297496 : 2626681.134278008, 1239690.0391496737 : 1246676.1978237946]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2619351.3940297496,1239690.0391496737,2626681.134278008,1246676.1978237946, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
16 Sep 16:15:41 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:15:41 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:15:41 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2614942.097161657 : 2629601.5776581727, 1236301.9430713775 : 1250274.2604196188]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 732
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2614942.097161657,1236301.9430713775,2629601.5776581727,1250274.2604196188, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=732, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:15:43 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:15:43 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:15:43 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2621893.554227273 : 2623821.4286154862, 1243717.9503580062 : 1245645.82474622]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2621893.554227273,1243717.9503580062,2623821.4286154862,1245645.82474622, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:16:17 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:16:17 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:16:17 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2618172.7183518074 : 2621837.588475936, 1237222.9325687173 : 1240716.0119057777]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2618172.7183518074,1237222.9325687173,2621837.588475936,1240716.0119057777, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:16:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:16:19 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:16:19 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2619143.203019217 : 2619625.1716162707, 1237257.0126332701 : 1237738.9812303237]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2619143.203019217,1237257.0126332701,2619625.1716162707,1237738.9812303237, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:16:30 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:16:30 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:16:30 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2616827.0238531036 : 2620491.8939772323, 1236034.7129581599 : 1239527.7922952203]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2616827.0238531036,1236034.7129581599,2620491.8939772323,1239527.7922952203, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:16:33 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:16:33 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:16:33 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2619162.0998193887 : 2619644.0684164423, 1237258.5673669218 : 1237740.5359639754]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2619162.0998193887,1237258.5673669218,2619644.0684164423,1237740.5359639754, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:16:50 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:16:50 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:16:50 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2608318.6079269033 : 2622978.088423419, 1235118.4954271277 : 1249090.812775369]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 732
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2608318.6079269033,1235118.4954271277,2622978.088423419,1249090.812775369, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=732, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:16:51 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:16:51 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:16:51 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2616722.0405943394 : 2620386.910718468, 1236263.7673409178 : 1239756.8466779783]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2616722.0405943394,1236263.7673409178,2620386.910718468,1239756.8466779783, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:16:52 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:16:52 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:16:52 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2618806.1968791224 : 2619722.4144101543, 1236847.1402220048 : 1237720.41005627]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2618806.1968791224,1236847.1402220048,2619722.4144101543,1237720.41005627, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:16:56 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:16:56 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:16:56 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2616135.088738522 : 2619799.9588626507, 1235309.3740794258 : 1238802.4534164863]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2616135.088738522,1235309.3740794258,2619799.9588626507,1238802.4534164863, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:16:58 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:16:58 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:16:58 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2616378.4590202025 : 2620043.329144331, 1236297.17110507 : 1239790.2504421305]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2616378.4590202025,1236297.17110507,2620043.329144331,1239790.2504421305, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:16:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:16:59 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:16:59 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2618665.3236804 : 2619147.2922774535, 1237528.679183914 : 1238010.6477809676]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2618665.3236804,1237528.679183914,2619147.2922774535,1238010.6477809676, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:18:34 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:18:34 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:18:34 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2608795.8045576494 : 2623455.285054165, 1231873.5583380552 : 1245845.8756862965]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 732
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2608795.8045576494,1231873.5583380552,2623455.285054165,1245845.8756862965, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=732, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 16:18:38 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:18:38 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:18:38 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2617921.0297499523 : 2619848.9041381655, 1236782.988964008 : 1238710.8633522217]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2617921.0297499523,1236782.988964008,2619848.9041381655,1238710.8633522217, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:18:49 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:18:49 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:18:49 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/jpeg
 width height: 101,101
 bbox: SRSEnvelope[2607016.880454134 : 2607077.126528766, 1228419.6383997563 : 1228479.884474388]
 layers: mopublic_grundstueck
 styles: grundstueck
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@43b5271c]
	RawKvp = {FORMAT=image/jpeg, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:mopublic_grundstueck, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2607016.880454134,1228419.6383997563,2607077.126528766,1228479.884474388, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:mopublic_grundstueck, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:19:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:19:03 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:19:03 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:19:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:19:08 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:19:08 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:19:29 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:19:29 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:19:29 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/plain
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:20:32 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 16:20:32 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 16:20:32 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 16:20:33 INFO   [wfs.json] - about to encode JSON
16 Sep 18:24:02 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
16 Sep 18:24:04 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
16 Sep 18:24:04 CONFIG [org.geoserver] - Loading catalog /usr/local/geoserver/data
16 Sep 18:24:04 CONFIG [org.geoserver] - Loaded style 'simple_roads'
16 Sep 18:24:04 CONFIG [org.geoserver] - Loaded style 'pophatch'
16 Sep 18:24:04 CONFIG [org.geoserver] - Loaded style 'burg'
16 Sep 18:24:04 CONFIG [org.geoserver] - Loaded style 'poi'
16 Sep 18:24:04 CONFIG [org.geoserver] - Loaded style 'polygon'
16 Sep 18:24:04 CONFIG [org.geoserver] - Loaded style 'population'
16 Sep 18:24:04 CONFIG [org.geoserver] - Loaded style 'raster'
16 Sep 18:24:04 CONFIG [org.geoserver] - Loaded style 'simple_streams'
16 Sep 18:24:04 CONFIG [org.geoserver] - Loaded style 'giant_polygon'
16 Sep 18:24:04 CONFIG [org.geoserver] - Loaded style 'tiger_roads'
16 Sep 18:24:04 CONFIG [org.geoserver] - Loaded style 'restricted'
16 Sep 18:24:04 CONFIG [org.geoserver] - Loaded style 'point'
16 Sep 18:24:04 CONFIG [org.geoserver] - Loaded style 'grass'
16 Sep 18:24:04 CONFIG [org.geoserver] - Loaded style 'dem'
16 Sep 18:24:04 CONFIG [org.geoserver] - Loaded style 'green'
16 Sep 18:24:04 CONFIG [org.geoserver] - Loaded style 'poly_landmarks'
16 Sep 18:24:04 CONFIG [org.geoserver] - Loaded style 'capitals'
16 Sep 18:24:04 CONFIG [org.geoserver] - Loaded style 'generic'
16 Sep 18:24:04 CONFIG [org.geoserver] - Loaded style 'line'
16 Sep 18:24:04 CONFIG [org.geoserver] - Loaded style 'rain'
16 Sep 18:24:04 CONFIG [org.geoserver] - Loaded style 'cite_lakes'
16 Sep 18:24:05 CONFIG [org.geoserver] - Loaded default workspace 'agi'
16 Sep 18:24:05 CONFIG [org.geoserver] - Loaded workspace 'agi'
16 Sep 18:24:05 CONFIG [org.geoserver] - Loaded style 'grundstueck'
16 Sep 18:24:05 CONFIG [org.geoserver] - Loaded workspace 'nurc'
16 Sep 18:24:05 CONFIG [org.geoserver] - Loaded workspace 'cite'
16 Sep 18:24:05 CONFIG [org.geoserver] - Loaded workspace 'tiger'
16 Sep 18:24:05 CONFIG [org.geoserver] - Loaded workspace 'it.geosolutions'
16 Sep 18:24:05 CONFIG [org.geoserver] - Loaded workspace 'sde'
16 Sep 18:24:05 CONFIG [org.geoserver] - Loaded workspace 'sf'
16 Sep 18:24:05 CONFIG [org.geoserver] - Loaded workspace 'topp'
16 Sep 18:24:05 CONFIG [org.geoserver] - Loaded workspace 'ne'
16 Sep 18:24:05 CONFIG [org.geoserver] - Loaded style 'coastline'
16 Sep 18:24:05 CONFIG [org.geoserver] - Loaded style 'populated_places'
16 Sep 18:24:05 CONFIG [org.geoserver] - Loaded style 'disputed'
16 Sep 18:24:05 CONFIG [org.geoserver] - Loaded style 'countries_mapcolor9'
16 Sep 18:24:05 CONFIG [org.geoserver] - Loaded style 'countries'
16 Sep 18:24:05 CONFIG [org.geoserver] - Loaded style 'boundary_lines'
16 Sep 18:24:05 CONFIG [org.geoserver] - Loaded data store 'agi_mopublic_pub', enabled
16 Sep 18:24:06 CONFIG [org.geoserver] - Loaded feature type 'mopublic_grundstueck', enabled
16 Sep 18:24:06 CONFIG [org.geoserver] - Loaded layer 'mopublic_grundstueck'
16 Sep 18:24:06 CONFIG [org.geoserver] - Loaded data store 'agi_inventar_hoheitsgrenzen_pub', enabled
16 Sep 18:24:06 CONFIG [org.geoserver] - Loaded feature type 'invntr_hhtsgrnzen_kantonsgrenzstein', enabled
16 Sep 18:24:06 CONFIG [org.geoserver] - Loaded layer 'invntr_hhtsgrnzen_kantonsgrenzstein'
16 Sep 18:24:06 CONFIG [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
16 Sep 18:24:06 CONFIG [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
16 Sep 18:24:06 CONFIG [org.geoserver] - Loaded layer 'Arc_Sample'
16 Sep 18:24:06 CONFIG [org.geoserver] - Loaded coverage store 'mosaic', enabled
16 Sep 18:24:06 CONFIG [org.geoserver] - Loaded coverage 'mosaic', enabled
16 Sep 18:24:06 CONFIG [org.geoserver] - Loaded layer 'mosaic'
16 Sep 18:24:06 CONFIG [org.geoserver] - Loaded coverage store 'img_sample2', enabled
16 Sep 18:24:06 CONFIG [org.geoserver] - Loaded coverage 'Pk50095', enabled
16 Sep 18:24:06 CONFIG [org.geoserver] - Loaded layer 'Pk50095'
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded coverage 'Img_Sample', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded layer 'Img_Sample'
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded data store 'nyc', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded layer 'poly_landmarks'
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded feature type 'giant_polygon', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded layer 'giant_polygon'
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded feature type 'tiger_roads', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded layer 'tiger_roads'
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded feature type 'poi', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded layer 'poi'
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded data store 'sf', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded feature type 'bugsites', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded layer 'bugsites'
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded feature type 'restricted', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded layer 'restricted'
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded feature type 'streams', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded layer 'streams'
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded feature type 'archsites', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded layer 'archsites'
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded feature type 'roads', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded layer 'roads'
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded coverage store 'sfdem', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded coverage 'sfdem', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded layer 'sfdem'
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded data store 'taz_shapes', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded layer 'tasmania_cities'
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded layer 'tasmania_water_bodies'
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded layer 'tasmania_roads'
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded data store 'states_shapefile', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded feature type 'states', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded layer 'states'
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded data store 'NaturalEarth', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded feature type 'boundary_lines', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded layer 'boundary_lines'
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded feature type 'disputed_areas', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded layer 'disputed_areas'
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded feature type 'coastlines', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded layer 'coastlines'
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded feature type 'populated_places', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded layer 'populated_places'
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded feature type 'countries', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded layer 'countries'
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded layer group 'world'
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded layer group 'tiger-ny'
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded layer group 'tasmania'
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded layer group 'spearfish'
16 Sep 18:24:07 CONFIG [org.geoserver] - Read catalog in 2.594 s
16 Sep 18:24:07 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/usr/local/geoserver/data/gwc'.
16 Sep 18:24:07 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
16 Sep 18:24:07 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
16 Sep 18:24:07 CONFIG [config.XMLConfiguration] - Initializing GridSets from gwc
16 Sep 18:24:07 CONFIG [config.XMLConfiguration] - Initializing layers from gwc
16 Sep 18:24:07 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
16 Sep 18:24:07 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
16 Sep 18:24:07 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
16 Sep 18:24:07 CONFIG [gwc.layer] - Loaded 30 tile layers in 34.88 ms
16 Sep 18:24:07 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
16 Sep 18:24:07 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOSERVER_DATA_DIR set to /usr/local/geoserver/data, using it as the default prefix.
16 Sep 18:24:07 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/usr/local/geoserver/data/gwc'.
16 Sep 18:24:07 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/usr/local/geoserver/data/gwc'.
16 Sep 18:24:07 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
16 Sep 18:24:07 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
16 Sep 18:24:07 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
16 Sep 18:24:07 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
16 Sep 18:24:07 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
16 Sep 18:24:07 CONFIG [diskquota.DiskQuotaMonitor] - 30 layers attached to global quota 500.0 MB
16 Sep 18:24:07 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl--3ef31051:182c1e8b194:-8000', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded service 'wms', enabled
16 Sep 18:24:07 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
16 Sep 18:24:08 CONFIG [org.geoserver] - Loaded service 'WFSInfoImpl-1c443fee:182c0f3f209:-7f97', enabled
16 Sep 18:24:08 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl-1c443fee:182c0f3f209:-7f98', enabled
16 Sep 18:24:08 CONFIG [org.geoserver] - Loaded service 'WMSInfoImpl-1c443fee:182c0f3f209:-7f99', enabled
16 Sep 18:24:08 CONFIG [org.geoserver] - Loaded service 'WCSInfoImpl-1c443fee:182c0f3f209:-7f96', enabled
16 Sep 18:24:08 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
16 Sep 18:24:08 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 18:24:10 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
16 Sep 18:24:10 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
16 Sep 18:24:10 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
16 Sep 18:24:13 CONFIG [geoserver.security] - Start reloading user/groups for service named default
16 Sep 18:24:13 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
16 Sep 18:24:13 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
16 Sep 18:24:13 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
16 Sep 18:24:57 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 18:24:57 INFO   [geoserver.ows] - 
org.geoserver.platform.ServiceException: Invalid format 'info_format=application/vnd.ogc.gml', supported formats are [text/plain, application/vnd.ogc.gml, text/xml, application/vnd.ogc.gml/3.1.1, text/xml; subtype=gml/3.1.1, text/html, application/json]
	at org.geoserver.wms.featureinfo.GetFeatureInfoKvpReader.read(GetFeatureInfoKvpReader.java:194)
	at org.geoserver.ows.Dispatcher.parseRequestKVP(Dispatcher.java:1509)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:682)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:258)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
16 Sep 18:25:13 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 18:25:13 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 18:25:13 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/vnd.ogc.gml
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/vnd.ogc.gml, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 18:29:47 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 18:29:47 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 18:29:47 INFO   [geoserver.wms] - 
Request: getCapabilities
	AcceptLanguages = null
	BaseUrl = http://localhost/geoserver/
	Get = false
	Namespace = null
	RawKvp = {REQUEST=GetCapabilities, SERVICE=WMS}
	Request = GetCapabilities
	RequestCharset = null
	RootLayerEnabled = null
	UpdateSequence = null
	Version = 1.3.0
16 Sep 18:34:02 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 18:34:02 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 18:34:02 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2617538.046832915 : 2621202.9169570436, 1235295.0581805035 : 1238788.137517564]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2617538.046832915,1235295.0581805035,2621202.9169570436,1238788.137517564, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
16 Sep 18:34:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 18:34:03 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 18:34:03 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2620021.775491335 : 2620503.7440883885, 1236510.5165032826 : 1236992.4851003361]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2620021.775491335,1236510.5165032826,2620503.7440883885,1236992.4851003361, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 18:34:18 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 18:34:18 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 18:34:18 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2620488.585872171 : 2620970.5544692245, 1235659.4681759407 : 1236141.4367729942]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2620488.585872171,1235659.4681759407,2620970.5544692245,1236141.4367729942, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 18:34:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 18:34:19 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 18:34:19 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2620488.585872171 : 2620970.5544692245, 1235659.4681759407 : 1236141.4367729942]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2620488.585872171,1235659.4681759407,2620970.5544692245,1236141.4367729942, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 18:34:20 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 18:34:20 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 18:34:20 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2620488.585872171 : 2620970.5544692245, 1235659.4681759407 : 1236141.4367729942]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2620488.585872171,1235659.4681759407,2620970.5544692245,1236141.4367729942, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 18:34:22 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 18:34:22 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 18:34:22 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2620725.9527499494 : 2621207.921347003, 1235948.459463272 : 1236430.4280603256]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2620725.9527499494,1235948.459463272,2621207.921347003,1236430.4280603256, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 18:34:26 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 18:34:26 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 18:34:26 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2620484.3259369163 : 2620966.29453397, 1235667.145729155 : 1236149.1143262086]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2620484.3259369163,1235667.145729155,2620966.29453397,1236149.1143262086, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 18:34:34 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 18:34:34 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 18:34:34 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2620493.122502249 : 2620975.0910993028, 1235656.2387104612 : 1236138.2073075147]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2620493.122502249,1235656.2387104612,2620975.0910993028,1236138.2073075147, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 18:34:35 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 18:34:35 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 18:34:35 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2620493.122502249 : 2620975.0910993028, 1235656.2387104612 : 1236138.2073075147]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2620493.122502249,1235656.2387104612,2620975.0910993028,1236138.2073075147, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 18:34:37 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 18:34:37 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 18:34:37 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2620716.819490704 : 2621198.788087758, 1235960.9341765859 : 1236442.9027736394]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2620716.819490704,1235960.9341765859,2621198.788087758,1236442.9027736394, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 18:34:38 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 18:34:38 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 18:34:38 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2620040.7183102253 : 2620522.686907279, 1236501.3586327613 : 1236983.3272298148]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2620040.7183102253,1236501.3586327613,2620522.686907279,1236983.3272298148, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 18:34:56 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 18:34:56 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 18:34:56 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2620492.4351340556 : 2620974.403731109, 1235652.1418795236 : 1236134.1104765772]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2620492.4351340556,1235652.1418795236,2620974.403731109,1236134.1104765772, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 18:34:58 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 18:34:58 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 18:34:58 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2620492.4351340556 : 2620974.403731109, 1235652.1418795236 : 1236134.1104765772]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2620492.4351340556,1235652.1418795236,2620974.403731109,1236134.1104765772, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 18:35:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 18:35:19 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 18:35:19 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2619057.40956588 : 2619539.3781629335, 1235971.4064931488 : 1236453.3750902023]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2619057.40956588,1235971.4064931488,2619539.3781629335,1236453.3750902023, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 18:35:21 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 18:35:21 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 18:35:21 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2619308.4090519953 : 2619790.377649049, 1235562.1078595705 : 1236044.076456624]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2619308.4090519953,1235562.1078595705,2619790.377649049,1236044.076456624, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 18:35:22 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 18:35:22 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 18:35:22 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2619754.5348928394 : 2620236.503489893, 1235430.8014571934 : 1235912.770054247]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2619754.5348928394,1235430.8014571934,2620236.503489893,1235912.770054247, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 18:35:23 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 18:35:23 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 18:35:23 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2620490.2291481663 : 2620972.19774522, 1235656.098615503 : 1236138.0672125565]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2620490.2291481663,1235656.098615503,2620972.19774522,1236138.0672125565, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 18:36:45 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 18:36:45 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 18:36:45 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 18:36:45 INFO   [wfs.json] - about to encode JSON
16 Sep 18:36:47 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 18:36:47 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 18:36:47 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 18:36:47 INFO   [wfs.json] - about to encode JSON
16 Sep 18:36:48 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 18:36:48 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 18:36:48 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
16 Sep 18:36:48 INFO   [wfs.json] - about to encode JSON
16 Sep 18:37:01 INFO   [geoserver.wms] - 
Request: getServiceInfo
16 Sep 18:37:01 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
16 Sep 18:37:01 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2620492.507948483 : 2620974.4765455364, 1235661.5933378157 : 1236143.5619348693]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2620492.507948483,1235661.5933378157,2620974.4765455364,1236143.5619348693, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:11:05 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
17 Sep 15:11:07 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
17 Sep 15:11:07 CONFIG [org.geoserver] - Loading catalog /usr/local/geoserver/data
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'simple_roads'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'pophatch'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'population'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'polygon'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'raster'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'giant_polygon'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'burg'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'poi'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'restricted'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'simple_streams'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'tiger_roads'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'grass'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'dem'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'point'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'poly_landmarks'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'green'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'generic'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'line'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'capitals'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'cite_lakes'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'rain'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded default workspace 'agi'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded workspace 'agi'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'grundstueck'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded workspace 'it.geosolutions'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded workspace 'tiger'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded workspace 'cite'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded workspace 'nurc'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded workspace 'sf'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded workspace 'ne'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'populated_places'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'coastline'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'countries'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'countries_mapcolor9'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'disputed'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded style 'boundary_lines'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded workspace 'topp'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded workspace 'sde'
17 Sep 15:11:07 CONFIG [org.geoserver] - Loaded data store 'agi_inventar_hoheitsgrenzen_pub', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded feature type 'invntr_hhtsgrnzen_kantonsgrenzstein', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer 'invntr_hhtsgrnzen_kantonsgrenzstein'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded data store 'agi_mopublic_pub', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded feature type 'mopublic_grundstueck', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer 'mopublic_grundstueck'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded coverage store 'mosaic', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded coverage 'mosaic', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer 'mosaic'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer 'Arc_Sample'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded coverage 'Img_Sample', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer 'Img_Sample'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded coverage store 'img_sample2', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded coverage 'Pk50095', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer 'Pk50095'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded data store 'nyc', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded feature type 'poi', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer 'poi'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer 'poly_landmarks'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded feature type 'giant_polygon', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer 'giant_polygon'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded feature type 'tiger_roads', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer 'tiger_roads'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded data store 'sf', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded feature type 'restricted', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer 'restricted'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded feature type 'bugsites', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer 'bugsites'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded feature type 'roads', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer 'roads'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded feature type 'streams', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer 'streams'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded feature type 'archsites', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer 'archsites'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded coverage store 'sfdem', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded coverage 'sfdem', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer 'sfdem'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded data store 'taz_shapes', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer 'tasmania_water_bodies'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer 'tasmania_roads'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer 'tasmania_cities'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded data store 'states_shapefile', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded feature type 'states', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer 'states'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded data store 'NaturalEarth', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded feature type 'boundary_lines', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer 'boundary_lines'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded feature type 'disputed_areas', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer 'disputed_areas'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded feature type 'coastlines', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer 'coastlines'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded feature type 'populated_places', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer 'populated_places'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded feature type 'countries', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer 'countries'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer group 'world'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer group 'spearfish'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer group 'tasmania'
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded layer group 'tiger-ny'
17 Sep 15:11:08 CONFIG [org.geoserver] - Read catalog in 1.431 s
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded service 'wms', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl--3ef31051:182c1e8b194:-8000', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded service 'WFSInfoImpl-1c443fee:182c0f3f209:-7f97', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded service 'WCSInfoImpl-1c443fee:182c0f3f209:-7f96', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded service 'WMSInfoImpl-1c443fee:182c0f3f209:-7f99', enabled
17 Sep 15:11:08 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl-1c443fee:182c0f3f209:-7f98', enabled
17 Sep 15:11:08 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/usr/local/geoserver/data/gwc'.
17 Sep 15:11:08 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
17 Sep 15:11:08 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
17 Sep 15:11:08 CONFIG [config.XMLConfiguration] - Initializing GridSets from gwc
17 Sep 15:11:08 CONFIG [config.XMLConfiguration] - Initializing layers from gwc
17 Sep 15:11:08 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
17 Sep 15:11:08 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
17 Sep 15:11:08 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
17 Sep 15:11:08 CONFIG [gwc.layer] - Loaded 30 tile layers in 31.25 ms
17 Sep 15:11:08 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
17 Sep 15:11:08 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOSERVER_DATA_DIR set to /usr/local/geoserver/data, using it as the default prefix.
17 Sep 15:11:08 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
17 Sep 15:11:09 WARN   [gce.imagemosaic] - Unable to set ordering between tiff readers spi
17 Sep 15:11:09 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:11:09 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/usr/local/geoserver/data/gwc'.
17 Sep 15:11:09 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/usr/local/geoserver/data/gwc'.
17 Sep 15:11:09 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Sep 15:11:09 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Sep 15:11:09 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Sep 15:11:09 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
17 Sep 15:11:09 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
17 Sep 15:11:09 CONFIG [diskquota.DiskQuotaMonitor] - 30 layers attached to global quota 500.0 MB
17 Sep 15:11:09 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
17 Sep 15:11:10 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
17 Sep 15:11:10 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
17 Sep 15:11:10 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
17 Sep 15:11:11 CONFIG [geoserver.security] - Start reloading user/groups for service named default
17 Sep 15:11:11 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
17 Sep 15:11:11 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
17 Sep 15:11:11 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
17 Sep 15:11:28 INFO   [geoserver.security] - Strong cryptography is available
17 Sep 15:11:33 WARN   [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: Schema 'invntr_hhtsgrnzen_kantonsgrenzstein' does not exist.
17 Sep 15:11:33 WARN   [geoserver.catalog] - Unable to flush 'https://agi.so.ch:invntr_hhtsgrnzen_kantonsgrenzstein
java.io.IOException: Schema 'invntr_hhtsgrnzen_kantonsgrenzstein' does not exist.
	at org.geotools.data.store.ContentDataStore.ensureEntry(ContentDataStore.java:545)
	at org.geotools.data.store.ContentDataStore.getFeatureSource(ContentDataStore.java:336)
	at org.geotools.data.store.ContentDataStore.getFeatureSource(ContentDataStore.java:308)
	at org.geoserver.catalog.ResourcePool.flushState(ResourcePool.java:2739)
	at org.geoserver.catalog.ResourcePool.flushDataStore(ResourcePool.java:2713)
	at org.geoserver.catalog.ResourcePool.clear(ResourcePool.java:1252)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:968)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:955)
	at org.geoserver.catalog.impl.FeatureTypeInfoImpl.getFeatureType(FeatureTypeInfoImpl.java:134)
	at jdk.internal.reflect.GeneratedMethodAccessor207.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:144)
	at com.sun.proxy.$Proxy48.getFeatureType(Unknown Source)
	at org.geoserver.web.CatalogIconFactory.getSpecificLayerIcon(CatalogIconFactory.java:109)
	at org.geoserver.web.demo.PreviewLayer.getIcon(PreviewLayer.java:89)
	at org.geoserver.web.demo.MapPreviewPage$1.getComponentForProperty(MapPreviewPage.java:82)
	at org.geoserver.web.wicket.GeoServerTablePanel$5.populateItem(GeoServerTablePanel.java:292)
	at org.apache.wicket.markup.html.list.ListView.onPopulate(ListView.java:523)
	at org.apache.wicket.markup.repeater.AbstractRepeater.onBeforeRender(AbstractRepeater.java:124)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.markup.repeater.AbstractRepeater.onBeforeRender(AbstractRepeater.java:143)
	at org.apache.wicket.markup.repeater.AbstractPageableView.onBeforeRender(AbstractPageableView.java:115)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.Page.onBeforeRender(Page.java:801)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.Component.internalPrepareForRender(Component.java:2236)
	at org.apache.wicket.Page.internalPrepareForRender(Page.java:242)
	at org.apache.wicket.Component.render(Component.java:2327)
	at org.apache.wicket.Page.renderPage(Page.java:1018)
	at org.apache.wicket.request.handler.render.WebPageRenderer.renderPage(WebPageRenderer.java:124)
	at org.apache.wicket.request.handler.render.WebPageRenderer.respond(WebPageRenderer.java:236)
	at org.apache.wicket.core.request.handler.RenderPageRequestHandler.respond(RenderPageRequestHandler.java:175)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:895)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
	at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:265)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:222)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:293)
	at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:261)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:203)
	at org.apache.wicket.protocol.http.WicketServlet.doGet(WicketServlet.java:137)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:122)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:106)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:97)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
17 Sep 15:11:33 WARN   [geoserver.catalog] - Unable to flush 'https://agi.so.ch:invntr_hhtsgrnzen_kantonsgrenzstein
java.io.IOException: Schema 'invntr_hhtsgrnzen_kantonsgrenzstein' does not exist.
	at org.geotools.data.store.ContentDataStore.ensureEntry(ContentDataStore.java:545)
	at org.geotools.data.store.ContentDataStore.getFeatureSource(ContentDataStore.java:336)
	at org.geotools.data.store.ContentDataStore.getFeatureSource(ContentDataStore.java:308)
	at org.geoserver.catalog.ResourcePool.flushState(ResourcePool.java:2739)
	at org.geoserver.catalog.ResourcePool.flushDataStore(ResourcePool.java:2713)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:969)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:955)
	at org.geoserver.catalog.impl.FeatureTypeInfoImpl.getFeatureType(FeatureTypeInfoImpl.java:134)
	at jdk.internal.reflect.GeneratedMethodAccessor207.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:144)
	at com.sun.proxy.$Proxy48.getFeatureType(Unknown Source)
	at org.geoserver.web.CatalogIconFactory.getSpecificLayerIcon(CatalogIconFactory.java:109)
	at org.geoserver.web.demo.PreviewLayer.getIcon(PreviewLayer.java:89)
	at org.geoserver.web.demo.MapPreviewPage$1.getComponentForProperty(MapPreviewPage.java:82)
	at org.geoserver.web.wicket.GeoServerTablePanel$5.populateItem(GeoServerTablePanel.java:292)
	at org.apache.wicket.markup.html.list.ListView.onPopulate(ListView.java:523)
	at org.apache.wicket.markup.repeater.AbstractRepeater.onBeforeRender(AbstractRepeater.java:124)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.markup.repeater.AbstractRepeater.onBeforeRender(AbstractRepeater.java:143)
	at org.apache.wicket.markup.repeater.AbstractPageableView.onBeforeRender(AbstractPageableView.java:115)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.Page.onBeforeRender(Page.java:801)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.Component.internalPrepareForRender(Component.java:2236)
	at org.apache.wicket.Page.internalPrepareForRender(Page.java:242)
	at org.apache.wicket.Component.render(Component.java:2327)
	at org.apache.wicket.Page.renderPage(Page.java:1018)
	at org.apache.wicket.request.handler.render.WebPageRenderer.renderPage(WebPageRenderer.java:124)
	at org.apache.wicket.request.handler.render.WebPageRenderer.respond(WebPageRenderer.java:236)
	at org.apache.wicket.core.request.handler.RenderPageRequestHandler.respond(RenderPageRequestHandler.java:175)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:895)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
	at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:265)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:222)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:293)
	at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:261)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:203)
	at org.apache.wicket.protocol.http.WicketServlet.doGet(WicketServlet.java:137)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:122)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:106)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:97)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
17 Sep 15:13:35 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
17 Sep 15:13:36 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
17 Sep 15:13:36 CONFIG [org.geoserver] - Loading catalog /usr/local/geoserver/data
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'simple_roads'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'pophatch'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'poi'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'giant_polygon'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'polygon'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'population'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'raster'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'tiger_roads'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'restricted'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'point'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'simple_streams'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'burg'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'dem'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'grass'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'poly_landmarks'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'capitals'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'generic'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'green'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'line'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'cite_lakes'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'rain'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded default workspace 'agi'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded workspace 'agi'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'grundstueck'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded workspace 'nurc'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded workspace 'sf'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded workspace 'it.geosolutions'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded workspace 'cite'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded workspace 'sde'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded workspace 'topp'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded workspace 'ne'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'coastline'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'populated_places'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'boundary_lines'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'disputed'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'countries_mapcolor9'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded style 'countries'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded workspace 'tiger'
17 Sep 15:13:36 CONFIG [org.geoserver] - Loaded data store 'agi_mopublic_pub', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded feature type 'mopublic_grundstueck', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer 'mopublic_grundstueck'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded data store 'agi_inventar_hoheitsgrenzen_pub', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded feature type 'invntr_hhtsgrnzen_kantonsgrenzstein', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer 'invntr_hhtsgrnzen_kantonsgrenzstein'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded coverage store 'mosaic', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded coverage 'mosaic', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer 'mosaic'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer 'Arc_Sample'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded coverage store 'img_sample2', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded coverage 'Pk50095', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer 'Pk50095'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded coverage 'Img_Sample', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer 'Img_Sample'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded data store 'nyc', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded feature type 'poi', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer 'poi'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer 'poly_landmarks'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded feature type 'tiger_roads', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer 'tiger_roads'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded feature type 'giant_polygon', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer 'giant_polygon'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded data store 'sf', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded feature type 'bugsites', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer 'bugsites'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded feature type 'restricted', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer 'restricted'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded feature type 'streams', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer 'streams'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded feature type 'archsites', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer 'archsites'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded feature type 'roads', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer 'roads'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded coverage store 'sfdem', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded coverage 'sfdem', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer 'sfdem'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded data store 'states_shapefile', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded feature type 'states', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer 'states'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded data store 'taz_shapes', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer 'tasmania_water_bodies'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer 'tasmania_cities'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer 'tasmania_roads'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded data store 'NaturalEarth', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded feature type 'boundary_lines', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer 'boundary_lines'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded feature type 'disputed_areas', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer 'disputed_areas'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded feature type 'populated_places', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer 'populated_places'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded feature type 'coastlines', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer 'coastlines'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded feature type 'countries', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer 'countries'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer group 'world'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer group 'tiger-ny'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer group 'spearfish'
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded layer group 'tasmania'
17 Sep 15:13:37 CONFIG [org.geoserver] - Read catalog in 1.141 s
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded service 'wms', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl--3ef31051:182c1e8b194:-8000', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded service 'WFSInfoImpl-1c443fee:182c0f3f209:-7f97', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded service 'WCSInfoImpl-1c443fee:182c0f3f209:-7f96', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded service 'WMSInfoImpl-1c443fee:182c0f3f209:-7f99', enabled
17 Sep 15:13:37 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl-1c443fee:182c0f3f209:-7f98', enabled
17 Sep 15:13:37 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/usr/local/geoserver/data/gwc'.
17 Sep 15:13:37 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
17 Sep 15:13:37 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
17 Sep 15:13:37 CONFIG [config.XMLConfiguration] - Initializing GridSets from gwc
17 Sep 15:13:37 CONFIG [config.XMLConfiguration] - Initializing layers from gwc
17 Sep 15:13:37 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
17 Sep 15:13:37 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
17 Sep 15:13:37 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
17 Sep 15:13:37 CONFIG [gwc.layer] - Loaded 30 tile layers in 17.91 ms
17 Sep 15:13:37 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
17 Sep 15:13:37 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOSERVER_DATA_DIR set to /usr/local/geoserver/data, using it as the default prefix.
17 Sep 15:13:37 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
17 Sep 15:13:38 WARN   [gce.imagemosaic] - Unable to set ordering between tiff readers spi
17 Sep 15:13:38 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:13:38 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/usr/local/geoserver/data/gwc'.
17 Sep 15:13:38 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/usr/local/geoserver/data/gwc'.
17 Sep 15:13:38 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Sep 15:13:38 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Sep 15:13:38 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Sep 15:13:38 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
17 Sep 15:13:38 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
17 Sep 15:13:38 CONFIG [diskquota.DiskQuotaMonitor] - 30 layers attached to global quota 500.0 MB
17 Sep 15:13:38 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
17 Sep 15:13:39 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
17 Sep 15:13:39 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
17 Sep 15:13:39 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
17 Sep 15:13:40 CONFIG [geoserver.security] - Start reloading user/groups for service named default
17 Sep 15:13:40 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
17 Sep 15:13:40 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
17 Sep 15:13:40 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
17 Sep 15:13:56 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:13:56 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:13:56 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2595066.5 : 2644759.75, 1213707.625 : 1261107.625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 732
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:2056, FORMAT=application/openlayers, BBOX=2595066.5,1213707.625,2644759.75,1261107.625, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=732, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
17 Sep 15:13:56 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:13:56 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:13:56 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2590605.0689936136 : 2649242.9909796757, 1209483.492423455 : 1265372.7618164208]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2590605.0689936136,1209483.492423455,2649242.9909796757,1265372.7618164208, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
17 Sep 15:14:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:14:00 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:14:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2595066.5 : 2644759.75, 1213707.625 : 1261107.625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 732
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:2056, FORMAT=application/openlayers, BBOX=2595066.5,1213707.625,2644759.75,1261107.625, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=732, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
17 Sep 15:14:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:14:03 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:14:03 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2590605.0689936136 : 2649242.9909796757, 1209483.492423455 : 1265372.7618164208]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2590605.0689936136,1209483.492423455,2649242.9909796757,1265372.7618164208, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
17 Sep 15:14:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:14:04 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:14:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2606295.2942125406 : 2620954.774709056, 1214847.1825530396 : 1228819.499901281]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 732
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2606295.2942125406,1214847.1825530396,2620954.774709056,1228819.499901281, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=732, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
17 Sep 15:14:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:14:05 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:14:05 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2612074.145410874 : 2615739.0155350026, 1220735.7889764446 : 1224228.868313505]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 733
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2612074.145410874,1220735.7889764446,2615739.0155350026,1224228.868313505, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=733, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
17 Sep 15:14:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:14:07 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:14:07 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2613865.7391519235 : 2614347.707748977, 1222165.682583784 : 1222647.6511808375]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2613865.7391519235,1222165.682583784,2614347.707748977,1222647.6511808375, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:16:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:16:08 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:16:08 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost/geoserver/
	Bbox = SRSEnvelope[2598545.6209292263 : 2627864.5819222573, 1208910.8564665602 : 1236855.4911630428]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["CH1903+ / LV95", 
  GEOGCS["CH1903+", 
    DATUM["CH1903+", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[674.374, 15.056, 405.346, 0.0, 0.0, 0.0, 0.0], 
      AUTHORITY["EPSG","6150"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4150"]], 
  PROJECTION["Oblique_Mercator", AUTHORITY["EPSG","9815"]], 
  PARAMETER["longitude_of_center", 7.439583333333333], 
  PARAMETER["latitude_of_center", 46.952405555555565], 
  PARAMETER["azimuth", 90.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 2600000.0], 
  PARAMETER["false_northing", 1200000.0], 
  PARAMETER["rectified_grid_angle", 90.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","2056"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 732
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:2056, BBOX=2598545.6209292263,1208910.8564665602,2627864.5819222573,1236855.4911630428, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=732, TRANSPARENT=true, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:2056
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
17 Sep 15:16:09 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:16:09 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:16:09 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2611949.9251629324 : 2615805.67393936, 1220599.0423169462 : 1224454.7910933737]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2611949.9251629324,1220599.0423169462,2615805.67393936,1224454.7910933737, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:17:33 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:17:33 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:17:33 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2613775.2022755356 : 2617630.951051963, 1220123.7842975126 : 1223979.53307394]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2613775.2022755356,1220123.7842975126,2617630.951051963,1223979.53307394, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:18:33 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:18:33 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:18:33 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2612344.8053748747 : 2616200.554151302, 1220503.602990797 : 1224359.3517672245]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2612344.8053748747,1220503.602990797,2616200.554151302,1224359.3517672245, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:18:53 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:18:53 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:18:53 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:18:56 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:18:56 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:18:56 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:19:53 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:19:53 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:19:53 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:19:54 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:19:54 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:19:54 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:19:54 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:19:54 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:19:54 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:19:55 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:19:55 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:19:55 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:19:55 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:19:55 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:19:55 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:26:41 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:26:41 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:26:41 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:27:10 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:27:10 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:27:10 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:27:10 INFO   [wfs.json] - about to encode JSON
17 Sep 15:33:58 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:33:58 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:33:58 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:34:35 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:34:35 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:34:35 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:36:23 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:36:23 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:36:23 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:37:37 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:37:37 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:37:37 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:38:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:38:07 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:38:07 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:38:07 ERROR  [freemarker.runtime] - Error executing FreeMarker template
FreeMarker template error:
For "${...}" content: Expected a string or something automatically convertible to string (number, date or boolean), or "template output" , but this has evaluated to an extended_hash (wrapper: f.t.SimpleHash):
==> feature  [in template "content.ftl" at line 9, column 59]

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${feature}  [in template "content.ftl" at line 9, column 57]
----

Java stack trace (for programmers):
----
freemarker.core.NonStringOrTemplateOutputException: [... Exception message was already printed; see it above ...]
	at freemarker.core.EvalUtil.coerceModelToTextualCommon(EvalUtil.java:525)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:401)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:370)
	at freemarker.core.DollarVariable.calculateInterpolatedStringOrMarkup(DollarVariable.java:100)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:63)
	at freemarker.core.Environment.visit(Environment.java:383)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:291)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:657)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:353)
	at freemarker.core.Environment.process(Environment.java:326)
	at freemarker.template.Template.process(Template.java:383)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:233)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:90)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
17 Sep 15:38:07 INFO   [geoserver.servlets] - OutputStream was successfully aborted.
17 Sep 15:38:07 ERROR  [geoserver.ows] - 
java.io.IOException: Error occurred processing content template content.ftl for featureType invntr_hhtsgrnzen_kantonsgrenzstein
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:241)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:90)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: freemarker.core.NonStringOrTemplateOutputException: For "${...}" content: Expected a string or something automatically convertible to string (number, date or boolean), or "template output" , but this has evaluated to an extended_hash (wrapper: f.t.SimpleHash):
==> feature  [in template "content.ftl" at line 9, column 59]

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${feature}  [in template "content.ftl" at line 9, column 57]
----
	at freemarker.core.EvalUtil.coerceModelToTextualCommon(EvalUtil.java:525)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:401)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:370)
	at freemarker.core.DollarVariable.calculateInterpolatedStringOrMarkup(DollarVariable.java:100)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:63)
	at freemarker.core.Environment.visit(Environment.java:383)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:291)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:657)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:353)
	at freemarker.core.Environment.process(Environment.java:326)
	at freemarker.template.Template.process(Template.java:383)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:233)
	... 112 more
17 Sep 15:38:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:38:19 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:38:19 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:39:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:39:19 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:39:19 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:41:55 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:41:55 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:41:55 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:41:56 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:41:56 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:41:56 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:41:57 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:41:57 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:41:57 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:43:32 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:43:32 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:43:32 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:43:33 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:43:33 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:43:33 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:44:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:44:03 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:44:03 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:44:31 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:44:31 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:44:31 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:46:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:46:06 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:46:06 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:46:27 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:46:27 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:46:27 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:47:10 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:47:10 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:47:10 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:47:32 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:47:32 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:47:32 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:50:20 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:50:20 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:50:20 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:51:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:51:08 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:51:08 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:51:09 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:51:09 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:51:09 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:51:12 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:51:12 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:51:12 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:51:13 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:51:13 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:51:13 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:51:40 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:51:40 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:51:40 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:51:48 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:51:48 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:51:48 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:56:31 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:56:31 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:56:31 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:56:31 INFO   [wfs.json] - about to encode JSON
17 Sep 15:56:32 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:56:32 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:56:32 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:56:32 INFO   [wfs.json] - about to encode JSON
17 Sep 15:56:45 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:56:45 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:56:45 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:56:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:56:59 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:56:59 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:57:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:57:03 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:57:03 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:57:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:57:03 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:57:04 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:57:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:57:04 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:57:04 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:57:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:57:04 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:57:04 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:57:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:57:04 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:57:04 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:57:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:57:04 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:57:04 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:57:27 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:57:27 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:57:27 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:57:27 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:57:27 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:57:27 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:57:27 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:57:27 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:57:27 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:57:28 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:57:28 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:57:28 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:57:28 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:57:28 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:57:28 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:57:45 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:57:45 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:57:45 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:57:49 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:57:49 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:57:49 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:58:26 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:58:26 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:58:26 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:58:49 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:58:49 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:58:49 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:58:49 INFO   [wfs.json] - about to encode JSON
17 Sep 15:58:51 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:58:51 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:58:51 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:59:43 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 15:59:43 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 15:59:43 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 15:59:43 INFO   [geoserver.servlets] - OutputStream was successfully aborted.
17 Sep 15:59:43 ERROR  [geoserver.ows] - 
freemarker.core.ParseException: Syntax error in template "content.ftl" in line 25, column 36:
Encountered "date", but was expecting one of these patterns:
    "."
    ".."
    <DOT_DOT_LESS>
    "..*"
    "?"
    "??"
    "!"
    "["
    "("
    "}"
    <TERMINATING_EXCLAM>
	at freemarker.core.FMParser.generateParseException(FMParser.java:6120)
	at freemarker.core.FMParser.jj_consume_token(FMParser.java:5979)
	at freemarker.core.FMParser.StringOutput(FMParser.java:1675)
	at freemarker.core.FMParser.MixedContentElements(FMParser.java:3968)
	at freemarker.core.FMParser.If(FMParser.java:1792)
	at freemarker.core.FMParser.FreemarkerDirective(FMParser.java:3629)
	at freemarker.core.FMParser.MixedContentElements(FMParser.java:4019)
	at freemarker.core.FMParser.List(FMParser.java:1913)
	at freemarker.core.FMParser.FreemarkerDirective(FMParser.java:3633)
	at freemarker.core.FMParser.MixedContentElements(FMParser.java:4019)
	at freemarker.core.FMParser.List(FMParser.java:1913)
	at freemarker.core.FMParser.FreemarkerDirective(FMParser.java:3633)
	at freemarker.core.FMParser.MixedContentElements(FMParser.java:4019)
	at freemarker.core.FMParser.Root(FMParser.java:4665)
	at freemarker.template.Template.<init>(Template.java:252)
	at freemarker.cache.TemplateCache.loadTemplate(TemplateCache.java:548)
	at freemarker.cache.TemplateCache.getTemplateInternal(TemplateCache.java:439)
	at freemarker.cache.TemplateCache.getTemplate(TemplateCache.java:292)
	at freemarker.template.Configuration.getTemplate(Configuration.java:2836)
	at freemarker.template.Configuration.getTemplate(Configuration.java:2685)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.getTemplate(FreeMarkerTemplateManager.java:283)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.getTemplate(FreeMarkerTemplateManager.java:264)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.getContentTemplate(FreeMarkerTemplateManager.java:255)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:89)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
17 Sep 16:01:17 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:01:17 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:01:17 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:02:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:02:05 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:02:05 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:02:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:02:06 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:02:06 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:02:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:02:07 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:02:07 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:02:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:02:07 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:02:08 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:02:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:02:08 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:02:08 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:02:09 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:02:09 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:02:09 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:02:09 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:02:09 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:02:09 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:04:38 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:04:38 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:04:38 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:04:38 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:04:38 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:04:38 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:04:39 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:04:39 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:04:39 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:04:40 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:04:40 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:04:40 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:04:41 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:04:41 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:04:41 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:06:27 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:06:27 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:06:27 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:06:27 ERROR  [freemarker.runtime] - Error executing FreeMarker template
FreeMarker template error:
Can't convert boolean to string automatically, because the "boolean_format" setting was "true,false", which is the legacy deprecated default, and we treat it as if no format was set. This is the default configuration; you should provide the format explicitly for each place where you print a boolean.

----
Tip: Write something like myBool?string('yes', 'no') to specify boolean formatting in place.
----
Tip: If you want "true"/"false" result as you are generating computer-language output (not for direct human consumption), then use "?c", like ${myBool?c}. (If you always generate computer-language output, then it's might be reasonable to set the "boolean_format" setting to "c" instead.)
----
Tip: If you need the same two values on most places, the programmers can set the "boolean_format" setting to something like "yes,no". However, then it will be easy to unwillingly format booleans like that.
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${attribute.value?is_datetime}  [in template "content.ftl" at line 27, column 17]
----

Java stack trace (for programmers):
----
freemarker.core._MiscTemplateException: [... Exception message was already printed; see it above ...]
	at freemarker.core.Configurable.formatBoolean(Configurable.java:1044)
	at freemarker.core.EvalUtil.coerceModelToTextualCommon(EvalUtil.java:495)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:401)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:370)
	at freemarker.core.DollarVariable.calculateInterpolatedStringOrMarkup(DollarVariable.java:100)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:63)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:389)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:321)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:657)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94)
	at freemarker.core.Environment.visit(Environment.java:383)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:291)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:657)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:353)
	at freemarker.core.Environment.process(Environment.java:326)
	at freemarker.template.Template.process(Template.java:383)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:233)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:90)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
17 Sep 16:06:27 INFO   [geoserver.servlets] - OutputStream was successfully aborted.
17 Sep 16:06:27 ERROR  [geoserver.ows] - 
java.io.IOException: Error occurred processing content template content.ftl for featureType invntr_hhtsgrnzen_kantonsgrenzstein
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:241)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:90)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: freemarker.core._MiscTemplateException: Can't convert boolean to string automatically, because the "boolean_format" setting was "true,false", which is the legacy deprecated default, and we treat it as if no format was set. This is the default configuration; you should provide the format explicitly for each place where you print a boolean.

----
Tip: Write something like myBool?string('yes', 'no') to specify boolean formatting in place.
----
Tip: If you want "true"/"false" result as you are generating computer-language output (not for direct human consumption), then use "?c", like ${myBool?c}. (If you always generate computer-language output, then it's might be reasonable to set the "boolean_format" setting to "c" instead.)
----
Tip: If you need the same two values on most places, the programmers can set the "boolean_format" setting to something like "yes,no". However, then it will be easy to unwillingly format booleans like that.
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${attribute.value?is_datetime}  [in template "content.ftl" at line 27, column 17]
----
	at freemarker.core.Configurable.formatBoolean(Configurable.java:1044)
	at freemarker.core.EvalUtil.coerceModelToTextualCommon(EvalUtil.java:495)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:401)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:370)
	at freemarker.core.DollarVariable.calculateInterpolatedStringOrMarkup(DollarVariable.java:100)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:63)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:389)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:321)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:657)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94)
	at freemarker.core.Environment.visit(Environment.java:383)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:291)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:657)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:353)
	at freemarker.core.Environment.process(Environment.java:326)
	at freemarker.template.Template.process(Template.java:383)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:233)
	... 112 more
17 Sep 16:09:18 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:09:18 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:09:18 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:09:18 INFO   [geoserver.servlets] - OutputStream was successfully aborted.
17 Sep 16:09:18 ERROR  [geoserver.ows] - 
freemarker.core.ParseException: Syntax error in template "content.ftl" in line 26, column 14:
#if is an existing directive, but the tag is malformed.  (See FreeMarker Manual / Directive Reference.)
	at freemarker.core.TokenMgrError.toParseException(TokenMgrError.java:260)
	at freemarker.template.Template.<init>(Template.java:268)
	at freemarker.cache.TemplateCache.loadTemplate(TemplateCache.java:548)
	at freemarker.cache.TemplateCache.getTemplateInternal(TemplateCache.java:439)
	at freemarker.cache.TemplateCache.getTemplate(TemplateCache.java:292)
	at freemarker.template.Configuration.getTemplate(Configuration.java:2836)
	at freemarker.template.Configuration.getTemplate(Configuration.java:2685)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.getTemplate(FreeMarkerTemplateManager.java:283)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.getTemplate(FreeMarkerTemplateManager.java:264)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.getContentTemplate(FreeMarkerTemplateManager.java:255)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:89)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
17 Sep 16:09:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:09:19 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:09:19 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:09:19 INFO   [geoserver.servlets] - OutputStream was successfully aborted.
17 Sep 16:09:19 ERROR  [geoserver.ows] - 
freemarker.core.ParseException: Syntax error in template "content.ftl" in line 26, column 14:
#if is an existing directive, but the tag is malformed.  (See FreeMarker Manual / Directive Reference.)
	at freemarker.core.TokenMgrError.toParseException(TokenMgrError.java:260)
	at freemarker.template.Template.<init>(Template.java:268)
	at freemarker.cache.TemplateCache.loadTemplate(TemplateCache.java:548)
	at freemarker.cache.TemplateCache.getTemplateInternal(TemplateCache.java:439)
	at freemarker.cache.TemplateCache.getTemplate(TemplateCache.java:292)
	at freemarker.template.Configuration.getTemplate(Configuration.java:2836)
	at freemarker.template.Configuration.getTemplate(Configuration.java:2685)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.getTemplate(FreeMarkerTemplateManager.java:283)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.getTemplate(FreeMarkerTemplateManager.java:264)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.getContentTemplate(FreeMarkerTemplateManager.java:255)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:89)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
17 Sep 16:09:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:09:44 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:09:44 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:09:44 INFO   [geoserver.servlets] - OutputStream was successfully aborted.
17 Sep 16:09:44 ERROR  [geoserver.ows] - 
freemarker.core.ParseException: Syntax error in template "content.ftl" in line 26, column 18:
You can't use ${...} (an interpolation) here as you are already in FreeMarker-expression-mode. Thus, instead of ${myExpression}, just write myExpression. (${...} is only used where otherwise static text is expected, i.e., outside FreeMarker tags and interpolations, or inside string literals.)
	at freemarker.core.TokenMgrError.toParseException(TokenMgrError.java:260)
	at freemarker.template.Template.<init>(Template.java:268)
	at freemarker.cache.TemplateCache.loadTemplate(TemplateCache.java:548)
	at freemarker.cache.TemplateCache.getTemplateInternal(TemplateCache.java:439)
	at freemarker.cache.TemplateCache.getTemplate(TemplateCache.java:292)
	at freemarker.template.Configuration.getTemplate(Configuration.java:2836)
	at freemarker.template.Configuration.getTemplate(Configuration.java:2685)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.getTemplate(FreeMarkerTemplateManager.java:283)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.getTemplate(FreeMarkerTemplateManager.java:264)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.getContentTemplate(FreeMarkerTemplateManager.java:255)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:89)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
17 Sep 16:10:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:10:04 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:10:04 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:10:11 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:10:11 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:10:11 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:10:11 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:10:11 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:10:12 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:10:12 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:10:12 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:10:12 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:10:12 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:10:12 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:10:12 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:10:12 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:10:12 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:10:12 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:10:12 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:10:12 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:10:12 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:10:12 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:10:12 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:10:12 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:10:13 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:10:13 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:10:13 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:10:13 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:10:13 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:10:13 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:10:13 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:10:13 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:10:13 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:10:13 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:10:13 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:10:13 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:10:13 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:10:13 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:10:13 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:10:13 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:10:13 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:10:13 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:10:14 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:10:14 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:10:14 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:10:14 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:10:14 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:10:14 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:10:14 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:10:14 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:10:14 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:10:14 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:10:14 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:10:14 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:10:14 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:10:14 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:10:14 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:10:14 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:10:14 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:10:14 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:10:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:10:15 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:10:15 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:10:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:10:15 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:10:15 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:10:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:10:15 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:10:15 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:10:34 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:10:34 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:10:35 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:11:17 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:11:17 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:11:17 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:11:18 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:11:18 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:11:18 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:11:18 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:11:18 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:11:18 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:11:18 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:11:18 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:11:18 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:11:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:11:19 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:11:19 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:11:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:11:19 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:11:19 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:11:26 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:11:26 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:11:26 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:11:26 ERROR  [freemarker.runtime] - Error executing FreeMarker template
FreeMarker template error:
For "${...}" content: Expected a string or something automatically convertible to string (number, date or boolean), or "template output" , but this has evaluated to a method+extended_hash (org.geoserver.template.FeatureWrapper$AttributeMap wrapped into f.e.b.SimpleMapModel):
==> attribute  [in template "content.ftl" at line 29, column 21]

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${attribute}  [in template "content.ftl" at line 29, column 19]
----

Java stack trace (for programmers):
----
freemarker.core.NonStringOrTemplateOutputException: [... Exception message was already printed; see it above ...]
	at freemarker.core.EvalUtil.coerceModelToTextualCommon(EvalUtil.java:525)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:401)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:370)
	at freemarker.core.DollarVariable.calculateInterpolatedStringOrMarkup(DollarVariable.java:100)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:63)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:353)
	at freemarker.core.Environment.visit(Environment.java:389)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:321)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:657)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94)
	at freemarker.core.Environment.visit(Environment.java:383)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:291)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:657)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:353)
	at freemarker.core.Environment.process(Environment.java:326)
	at freemarker.template.Template.process(Template.java:383)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:233)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:90)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
17 Sep 16:11:26 INFO   [geoserver.servlets] - OutputStream was successfully aborted.
17 Sep 16:11:26 ERROR  [geoserver.ows] - 
java.io.IOException: Error occurred processing content template content.ftl for featureType invntr_hhtsgrnzen_kantonsgrenzstein
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:241)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:90)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: freemarker.core.NonStringOrTemplateOutputException: For "${...}" content: Expected a string or something automatically convertible to string (number, date or boolean), or "template output" , but this has evaluated to a method+extended_hash (org.geoserver.template.FeatureWrapper$AttributeMap wrapped into f.e.b.SimpleMapModel):
==> attribute  [in template "content.ftl" at line 29, column 21]

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${attribute}  [in template "content.ftl" at line 29, column 19]
----
	at freemarker.core.EvalUtil.coerceModelToTextualCommon(EvalUtil.java:525)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:401)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:370)
	at freemarker.core.DollarVariable.calculateInterpolatedStringOrMarkup(DollarVariable.java:100)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:63)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:353)
	at freemarker.core.Environment.visit(Environment.java:389)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:321)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:657)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94)
	at freemarker.core.Environment.visit(Environment.java:383)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:291)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:657)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:353)
	at freemarker.core.Environment.process(Environment.java:326)
	at freemarker.template.Template.process(Template.java:383)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:233)
	... 112 more
17 Sep 16:11:44 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:11:44 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:11:44 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:12:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:12:05 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:12:05 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:12:05 ERROR  [freemarker.runtime] - Error executing FreeMarker template
FreeMarker template error:
Can't convert boolean to string automatically, because the "boolean_format" setting was "true,false", which is the legacy deprecated default, and we treat it as if no format was set. This is the default configuration; you should provide the format explicitly for each place where you print a boolean.

----
Tip: Write something like myBool?string('yes', 'no') to specify boolean formatting in place.
----
Tip: If you want "true"/"false" result as you are generating computer-language output (not for direct human consumption), then use "?c", like ${myBool?c}. (If you always generate computer-language output, then it's might be reasonable to set the "boolean_format" setting to "c" instead.)
----
Tip: If you need the same two values on most places, the programmers can set the "boolean_format" setting to something like "yes,no". However, then it will be easy to unwillingly format booleans like that.
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${attribute.rawValue}  [in template "content.ftl" at line 29, column 19]
----

Java stack trace (for programmers):
----
freemarker.core._MiscTemplateException: [... Exception message was already printed; see it above ...]
	at freemarker.core.Configurable.formatBoolean(Configurable.java:1033)
	at freemarker.core.EvalUtil.coerceModelToTextualCommon(EvalUtil.java:495)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:401)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:370)
	at freemarker.core.DollarVariable.calculateInterpolatedStringOrMarkup(DollarVariable.java:100)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:63)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:353)
	at freemarker.core.Environment.visit(Environment.java:389)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:321)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:657)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94)
	at freemarker.core.Environment.visit(Environment.java:383)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:291)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:657)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:353)
	at freemarker.core.Environment.process(Environment.java:326)
	at freemarker.template.Template.process(Template.java:383)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:233)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:90)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
17 Sep 16:12:05 INFO   [geoserver.servlets] - OutputStream was successfully aborted.
17 Sep 16:12:05 ERROR  [geoserver.ows] - 
java.io.IOException: Error occurred processing content template content.ftl for featureType invntr_hhtsgrnzen_kantonsgrenzstein
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:241)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:90)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: freemarker.core._MiscTemplateException: Can't convert boolean to string automatically, because the "boolean_format" setting was "true,false", which is the legacy deprecated default, and we treat it as if no format was set. This is the default configuration; you should provide the format explicitly for each place where you print a boolean.

----
Tip: Write something like myBool?string('yes', 'no') to specify boolean formatting in place.
----
Tip: If you want "true"/"false" result as you are generating computer-language output (not for direct human consumption), then use "?c", like ${myBool?c}. (If you always generate computer-language output, then it's might be reasonable to set the "boolean_format" setting to "c" instead.)
----
Tip: If you need the same two values on most places, the programmers can set the "boolean_format" setting to something like "yes,no". However, then it will be easy to unwillingly format booleans like that.
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${attribute.rawValue}  [in template "content.ftl" at line 29, column 19]
----
	at freemarker.core.Configurable.formatBoolean(Configurable.java:1033)
	at freemarker.core.EvalUtil.coerceModelToTextualCommon(EvalUtil.java:495)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:401)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:370)
	at freemarker.core.DollarVariable.calculateInterpolatedStringOrMarkup(DollarVariable.java:100)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:63)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:353)
	at freemarker.core.Environment.visit(Environment.java:389)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:321)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:657)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94)
	at freemarker.core.Environment.visit(Environment.java:383)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:291)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:657)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:353)
	at freemarker.core.Environment.process(Environment.java:326)
	at freemarker.template.Template.process(Template.java:383)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:233)
	... 112 more
17 Sep 16:12:20 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:12:20 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:12:20 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:12:20 INFO   [wfs.json] - about to encode JSON
17 Sep 16:14:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:14:06 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:14:06 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:17:40 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:17:40 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:17:40 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:17:41 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:17:41 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:17:41 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:17:42 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:17:42 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:17:42 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:17:43 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:17:43 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:17:43 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:17:51 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:17:51 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:17:51 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:17:52 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:17:52 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:17:52 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:17:52 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:17:52 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:17:52 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:17:52 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:17:52 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:17:52 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:17:52 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:17:52 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:17:52 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:17:52 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:17:52 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:17:52 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:18:25 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:18:25 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:18:25 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:18:26 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:18:26 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:18:26 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:18:55 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:18:55 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:18:55 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:19:26 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:19:26 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:19:26 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:19:39 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:19:39 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:19:39 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:19:47 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:19:47 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:19:47 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:20:47 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:20:47 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:20:47 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:20:47 ERROR  [freemarker.runtime] - Error executing FreeMarker template
FreeMarker template error:
The string doesn't match the expected date/time/date-time format. The string to parse was: "10/10/18, 12:00 AM". The expected format was: "MMM d, y".
The nested reason given follows:
Unparseable date: "10/10/18, 12:00 AM"

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${attribute.value?date}  [in template "content.ftl" at line 27, column 19]
----

Java stack trace (for programmers):
----
freemarker.core._TemplateModelException: [... Exception message was already printed; see it above ...]
	at freemarker.core.BuiltInsForMultipleTypes$dateBI$DateParser.parse(BuiltInsForMultipleTypes.java:220)
	at freemarker.core.BuiltInsForMultipleTypes$dateBI$DateParser.getAsDateModel(BuiltInsForMultipleTypes.java:190)
	at freemarker.core.BuiltInsForMultipleTypes$dateBI$DateParser.getAsDate(BuiltInsForMultipleTypes.java:197)
	at freemarker.core.EvalUtil.modelToDate(EvalUtil.java:86)
	at freemarker.core.Environment.getTemplateDateFormat(Environment.java:1963)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:392)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:370)
	at freemarker.core.DollarVariable.calculateInterpolatedStringOrMarkup(DollarVariable.java:100)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:63)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:353)
	at freemarker.core.Environment.visit(Environment.java:389)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:321)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:657)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94)
	at freemarker.core.Environment.visit(Environment.java:383)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:291)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:657)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:353)
	at freemarker.core.Environment.process(Environment.java:326)
	at freemarker.template.Template.process(Template.java:383)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:233)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:90)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: freemarker.core.UnparsableValueException: Unparseable date: "10/10/18, 12:00 AM"
	at freemarker.core.JavaTemplateDateFormat.parse(JavaTemplateDateFormat.java:51)
	at freemarker.core.JavaTemplateDateFormat.parse(JavaTemplateDateFormat.java:33)
	at freemarker.core.BuiltInsForMultipleTypes$dateBI$DateParser.parse(BuiltInsForMultipleTypes.java:213)
	... 141 more
Caused by: java.text.ParseException: Unparseable date: "10/10/18, 12:00 AM"
	at java.base/java.text.DateFormat.parse(Unknown Source)
	at freemarker.core.JavaTemplateDateFormat.parse(JavaTemplateDateFormat.java:49)
	... 143 more
17 Sep 16:20:47 INFO   [geoserver.servlets] - OutputStream was successfully aborted.
17 Sep 16:20:47 ERROR  [geoserver.ows] - 
java.io.IOException: Error occurred processing content template content.ftl for featureType invntr_hhtsgrnzen_kantonsgrenzstein
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:241)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:90)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: freemarker.core._TemplateModelException: The string doesn't match the expected date/time/date-time format. The string to parse was: "10/10/18, 12:00 AM". The expected format was: "MMM d, y".
The nested reason given follows:
Unparseable date: "10/10/18, 12:00 AM"

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${attribute.value?date}  [in template "content.ftl" at line 27, column 19]
----
	at freemarker.core.BuiltInsForMultipleTypes$dateBI$DateParser.parse(BuiltInsForMultipleTypes.java:220)
	at freemarker.core.BuiltInsForMultipleTypes$dateBI$DateParser.getAsDateModel(BuiltInsForMultipleTypes.java:190)
	at freemarker.core.BuiltInsForMultipleTypes$dateBI$DateParser.getAsDate(BuiltInsForMultipleTypes.java:197)
	at freemarker.core.EvalUtil.modelToDate(EvalUtil.java:86)
	at freemarker.core.Environment.getTemplateDateFormat(Environment.java:1963)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:392)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:370)
	at freemarker.core.DollarVariable.calculateInterpolatedStringOrMarkup(DollarVariable.java:100)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:63)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:353)
	at freemarker.core.Environment.visit(Environment.java:389)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:321)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:657)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94)
	at freemarker.core.Environment.visit(Environment.java:383)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:291)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:657)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:353)
	at freemarker.core.Environment.process(Environment.java:326)
	at freemarker.template.Template.process(Template.java:383)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:233)
	... 112 more
Caused by: freemarker.core.UnparsableValueException: Unparseable date: "10/10/18, 12:00 AM"
	at freemarker.core.JavaTemplateDateFormat.parse(JavaTemplateDateFormat.java:51)
	at freemarker.core.JavaTemplateDateFormat.parse(JavaTemplateDateFormat.java:33)
	at freemarker.core.BuiltInsForMultipleTypes$dateBI$DateParser.parse(BuiltInsForMultipleTypes.java:213)
	... 141 more
Caused by: java.text.ParseException: Unparseable date: "10/10/18, 12:00 AM"
	at java.base/java.text.DateFormat.parse(Unknown Source)
	at freemarker.core.JavaTemplateDateFormat.parse(JavaTemplateDateFormat.java:49)
	... 143 more
17 Sep 16:20:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:20:59 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:20:59 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:21:55 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:21:55 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:21:55 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:21:56 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:21:56 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:21:56 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:21:57 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:21:57 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:21:57 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:21:58 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:21:58 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:21:58 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:21:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:21:59 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:21:59 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:21:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:21:59 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:21:59 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:22:18 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:22:18 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:22:18 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:22:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:22:19 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:22:19 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:22:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:22:19 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:22:19 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:22:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:22:19 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:22:19 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:22:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:22:19 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:22:19 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:23:25 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:23:25 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:23:25 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:24:36 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:24:36 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:24:36 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:24:36 INFO   [geoserver.servlets] - OutputStream was successfully aborted.
17 Sep 16:24:36 ERROR  [geoserver.ows] - 
freemarker.core.ParseException: Syntax error in template "content.ftl" in line 40, column 15:
Encountered "featureInfo", but was expecting one of these patterns:
    "."
    ".."
    <DOT_DOT_LESS>
    "..*"
    "?"
    "??"
    "!"
    "["
    "]"
    "("
    <TERMINATING_EXCLAM>
	at freemarker.core.FMParser.generateParseException(FMParser.java:6120)
	at freemarker.core.FMParser.jj_consume_token(FMParser.java:5979)
	at freemarker.core.FMParser.DynamicKey(FMParser.java:1482)
	at freemarker.core.FMParser.PrimaryExpression(FMParser.java:587)
	at freemarker.core.FMParser.UnaryExpression(FMParser.java:707)
	at freemarker.core.FMParser.MultiplicativeExpression(FMParser.java:822)
	at freemarker.core.FMParser.AdditiveExpression(FMParser.java:774)
	at freemarker.core.FMParser.RangeExpression(FMParser.java:950)
	at freemarker.core.FMParser.RelationalExpression(FMParser.java:902)
	at freemarker.core.FMParser.EqualityExpression(FMParser.java:865)
	at freemarker.core.FMParser.AndExpression(FMParser.java:1017)
	at freemarker.core.FMParser.OrExpression(FMParser.java:1039)
	at freemarker.core.FMParser.Expression(FMParser.java:552)
	at freemarker.core.FMParser.StringOutput(FMParser.java:1674)
	at freemarker.core.FMParser.MixedContentElements(FMParser.java:3968)
	at freemarker.core.FMParser.If(FMParser.java:1792)
	at freemarker.core.FMParser.FreemarkerDirective(FMParser.java:3629)
	at freemarker.core.FMParser.MixedContentElements(FMParser.java:4019)
	at freemarker.core.FMParser.If(FMParser.java:1792)
	at freemarker.core.FMParser.FreemarkerDirective(FMParser.java:3629)
	at freemarker.core.FMParser.MixedContentElements(FMParser.java:4019)
	at freemarker.core.FMParser.List(FMParser.java:1913)
	at freemarker.core.FMParser.FreemarkerDirective(FMParser.java:3633)
	at freemarker.core.FMParser.MixedContentElements(FMParser.java:4019)
	at freemarker.core.FMParser.List(FMParser.java:1913)
	at freemarker.core.FMParser.FreemarkerDirective(FMParser.java:3633)
	at freemarker.core.FMParser.MixedContentElements(FMParser.java:4019)
	at freemarker.core.FMParser.Root(FMParser.java:4665)
	at freemarker.template.Template.<init>(Template.java:252)
	at freemarker.cache.TemplateCache.loadTemplate(TemplateCache.java:548)
	at freemarker.cache.TemplateCache.getTemplateInternal(TemplateCache.java:439)
	at freemarker.cache.TemplateCache.getTemplate(TemplateCache.java:292)
	at freemarker.template.Configuration.getTemplate(Configuration.java:2836)
	at freemarker.template.Configuration.getTemplate(Configuration.java:2685)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.getTemplate(FreeMarkerTemplateManager.java:283)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.getTemplate(FreeMarkerTemplateManager.java:264)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.getContentTemplate(FreeMarkerTemplateManager.java:255)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:89)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
17 Sep 16:24:41 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:24:41 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:24:41 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:24:50 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:24:50 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:24:50 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:27:01 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:27:01 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:27:01 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:27:36 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:27:36 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:27:36 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:27:36 INFO   [geoserver.servlets] - OutputStream was successfully aborted.
17 Sep 16:27:36 ERROR  [geoserver.ows] - 
freemarker.core.ParseException: Syntax error in template "content.ftl" in line 28, column 75:
Lexical error: encountered "\u00a0" (160), after "".
	at freemarker.core.TokenMgrError.toParseException(TokenMgrError.java:260)
	at freemarker.template.Template.<init>(Template.java:268)
	at freemarker.cache.TemplateCache.loadTemplate(TemplateCache.java:548)
	at freemarker.cache.TemplateCache.getTemplateInternal(TemplateCache.java:439)
	at freemarker.cache.TemplateCache.getTemplate(TemplateCache.java:292)
	at freemarker.template.Configuration.getTemplate(Configuration.java:2836)
	at freemarker.template.Configuration.getTemplate(Configuration.java:2685)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.getTemplate(FreeMarkerTemplateManager.java:283)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.getTemplate(FreeMarkerTemplateManager.java:264)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.getContentTemplate(FreeMarkerTemplateManager.java:255)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:89)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
17 Sep 16:28:26 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:28:26 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:28:26 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:28:51 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:28:51 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:28:51 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:28:51 ERROR  [freemarker.runtime] - Error executing FreeMarker template
FreeMarker template error:
For "||" right-hand operand: Expected a boolean, but this has evaluated to a string (wrapper: f.t.SimpleScalar):
==> attribute.value?string  [in template "content.ftl" at line 28, column 76]

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #elseif attribute.value?string?lower_...  [in template "content.ftl" at line 28, column 13]
----

Java stack trace (for programmers):
----
freemarker.core.NonBooleanException: [... Exception message was already printed; see it above ...]
	at freemarker.core.Expression.modelToBoolean(Expression.java:195)
	at freemarker.core.Expression.evalToBoolean(Expression.java:178)
	at freemarker.core.Expression.evalToBoolean(Expression.java:163)
	at freemarker.core.OrExpression.evalToBoolean(OrExpression.java:36)
	at freemarker.core.IfBlock.accept(IfBlock.java:49)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:389)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:321)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:657)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94)
	at freemarker.core.Environment.visit(Environment.java:383)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:291)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:657)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:353)
	at freemarker.core.Environment.process(Environment.java:326)
	at freemarker.template.Template.process(Template.java:383)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:233)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:90)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
17 Sep 16:28:51 INFO   [geoserver.servlets] - OutputStream was successfully aborted.
17 Sep 16:28:51 ERROR  [geoserver.ows] - 
java.io.IOException: Error occurred processing content template content.ftl for featureType invntr_hhtsgrnzen_kantonsgrenzstein
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:241)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:90)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: freemarker.core.NonBooleanException: For "||" right-hand operand: Expected a boolean, but this has evaluated to a string (wrapper: f.t.SimpleScalar):
==> attribute.value?string  [in template "content.ftl" at line 28, column 76]

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #elseif attribute.value?string?lower_...  [in template "content.ftl" at line 28, column 13]
----
	at freemarker.core.Expression.modelToBoolean(Expression.java:195)
	at freemarker.core.Expression.evalToBoolean(Expression.java:178)
	at freemarker.core.Expression.evalToBoolean(Expression.java:163)
	at freemarker.core.OrExpression.evalToBoolean(OrExpression.java:36)
	at freemarker.core.IfBlock.accept(IfBlock.java:49)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:389)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:321)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:657)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94)
	at freemarker.core.Environment.visit(Environment.java:383)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:291)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:657)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:353)
	at freemarker.core.Environment.process(Environment.java:326)
	at freemarker.template.Template.process(Template.java:383)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:233)
	... 112 more
17 Sep 16:29:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:29:19 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:29:19 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:29:19 ERROR  [freemarker.runtime] - Error executing FreeMarker template
FreeMarker template error:
For "||" right-hand operand: Expected a boolean, but this has evaluated to a string (wrapper: f.t.SimpleScalar):
==> attribute.value?string  [in template "content.ftl" at line 28, column 78]

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #elseif (attribute.value?string?lower...  [in template "content.ftl" at line 28, column 13]
----

Java stack trace (for programmers):
----
freemarker.core.NonBooleanException: [... Exception message was already printed; see it above ...]
	at freemarker.core.Expression.modelToBoolean(Expression.java:195)
	at freemarker.core.Expression.evalToBoolean(Expression.java:178)
	at freemarker.core.Expression.evalToBoolean(Expression.java:163)
	at freemarker.core.OrExpression.evalToBoolean(OrExpression.java:36)
	at freemarker.core.IfBlock.accept(IfBlock.java:49)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:389)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:321)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:657)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94)
	at freemarker.core.Environment.visit(Environment.java:383)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:291)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:657)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:353)
	at freemarker.core.Environment.process(Environment.java:326)
	at freemarker.template.Template.process(Template.java:383)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:233)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:90)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
17 Sep 16:29:19 INFO   [geoserver.servlets] - OutputStream was successfully aborted.
17 Sep 16:29:19 ERROR  [geoserver.ows] - 
java.io.IOException: Error occurred processing content template content.ftl for featureType invntr_hhtsgrnzen_kantonsgrenzstein
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:241)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:90)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: freemarker.core.NonBooleanException: For "||" right-hand operand: Expected a boolean, but this has evaluated to a string (wrapper: f.t.SimpleScalar):
==> attribute.value?string  [in template "content.ftl" at line 28, column 78]

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #elseif (attribute.value?string?lower...  [in template "content.ftl" at line 28, column 13]
----
	at freemarker.core.Expression.modelToBoolean(Expression.java:195)
	at freemarker.core.Expression.evalToBoolean(Expression.java:178)
	at freemarker.core.Expression.evalToBoolean(Expression.java:163)
	at freemarker.core.OrExpression.evalToBoolean(OrExpression.java:36)
	at freemarker.core.IfBlock.accept(IfBlock.java:49)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:389)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:321)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:657)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94)
	at freemarker.core.Environment.visit(Environment.java:383)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:291)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:657)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94)
	at freemarker.core.Environment.visit(Environment.java:347)
	at freemarker.core.Environment.visit(Environment.java:353)
	at freemarker.core.Environment.process(Environment.java:326)
	at freemarker.template.Template.process(Template.java:383)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.processTemplate(FreeMarkerTemplateManager.java:233)
	... 112 more
17 Sep 16:29:26 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:29:26 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:29:26 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:29:26 INFO   [geoserver.servlets] - OutputStream was successfully aborted.
17 Sep 16:29:26 ERROR  [geoserver.ows] - 
freemarker.core.ParseException: Syntax error in template "content.ftl" in line 28, column 78:
Found number literal: 1. Expecting boolean (true/false)
	at freemarker.core.FMParser.notNumberLiteral(FMParser.java:385)
	at freemarker.core.FMParser.booleanLiteralOnly(FMParser.java:450)
	at freemarker.core.FMParser.OrExpression(FMParser.java:1051)
	at freemarker.core.FMParser.Expression(FMParser.java:552)
	at freemarker.core.FMParser.If(FMParser.java:1808)
	at freemarker.core.FMParser.FreemarkerDirective(FMParser.java:3629)
	at freemarker.core.FMParser.MixedContentElements(FMParser.java:4019)
	at freemarker.core.FMParser.If(FMParser.java:1792)
	at freemarker.core.FMParser.FreemarkerDirective(FMParser.java:3629)
	at freemarker.core.FMParser.MixedContentElements(FMParser.java:4019)
	at freemarker.core.FMParser.List(FMParser.java:1913)
	at freemarker.core.FMParser.FreemarkerDirective(FMParser.java:3633)
	at freemarker.core.FMParser.MixedContentElements(FMParser.java:4019)
	at freemarker.core.FMParser.List(FMParser.java:1913)
	at freemarker.core.FMParser.FreemarkerDirective(FMParser.java:3633)
	at freemarker.core.FMParser.MixedContentElements(FMParser.java:4019)
	at freemarker.core.FMParser.Root(FMParser.java:4665)
	at freemarker.template.Template.<init>(Template.java:252)
	at freemarker.cache.TemplateCache.loadTemplate(TemplateCache.java:548)
	at freemarker.cache.TemplateCache.getTemplateInternal(TemplateCache.java:439)
	at freemarker.cache.TemplateCache.getTemplate(TemplateCache.java:292)
	at freemarker.template.Configuration.getTemplate(Configuration.java:2836)
	at freemarker.template.Configuration.getTemplate(Configuration.java:2685)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.getTemplate(FreeMarkerTemplateManager.java:283)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.getTemplate(FreeMarkerTemplateManager.java:264)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.getContentTemplate(FreeMarkerTemplateManager.java:255)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat$HTMLTemplateManager.handleContent(HTMLFeatureInfoOutputFormat.java:89)
	at org.geoserver.wms.featureinfo.FreeMarkerTemplateManager.write(FreeMarkerTemplateManager.java:200)
	at org.geoserver.wms.featureinfo.HTMLFeatureInfoOutputFormat.write(HTMLFeatureInfoOutputFormat.java:55)
	at org.geoserver.wms.featureinfo.GetFeatureInfoResponse.write(GetFeatureInfoResponse.java:98)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:1018)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:272)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
17 Sep 16:29:34 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:29:34 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:29:34 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:29:49 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:29:49 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:29:49 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:29:50 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:29:50 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:29:50 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:30:11 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:30:11 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:30:11 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:30:12 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:30:12 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:30:12 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:30:18 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:30:18 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:30:18 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:30:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:30:19 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:30:19 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:30:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:30:19 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:30:19 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:30:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:30:19 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:30:19 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:30:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:30:19 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:30:19 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:30:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:30:19 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:30:19 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:30:20 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:30:20 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:30:20 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:30:20 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:30:20 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:30:20 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:30:56 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:30:56 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:30:56 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:32:23 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:32:23 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:32:23 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:33:23 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:33:23 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:33:23 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:33:41 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:33:41 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:33:41 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:34:55 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:34:55 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:34:55 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:36:07 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer agi:invntr_hhtsgrnzen_kantonsgrenzstein
17 Sep 16:36:10 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:36:10 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:36:10 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:36:10 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /usr/local/geoserver/data/gwc-layers. Created: 0, removed: 0, modified: 1
17 Sep 16:39:22 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer agi:invntr_hhtsgrnzen_kantonsgrenzstein
17 Sep 16:39:23 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:39:23 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:39:23 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:39:25 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /usr/local/geoserver/data/gwc-layers. Created: 0, removed: 0, modified: 1
17 Sep 16:40:28 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:40:28 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:40:28 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:40:28 INFO   [wfs.json] - about to encode JSON
17 Sep 16:49:59 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer agi:invntr_hhtsgrnzen_kantonsgrenzstein
17 Sep 16:50:02 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /usr/local/geoserver/data/gwc-layers. Created: 0, removed: 0, modified: 1
17 Sep 16:50:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:50:06 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:50:06 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:50:06 INFO   [wfs.json] - about to encode JSON
17 Sep 16:50:40 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer agi:invntr_hhtsgrnzen_kantonsgrenzstein
17 Sep 16:50:42 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /usr/local/geoserver/data/gwc-layers. Created: 0, removed: 0, modified: 1
17 Sep 16:50:43 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:50:43 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:50:43 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:50:43 INFO   [wfs.json] - about to encode JSON
17 Sep 16:50:45 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:50:45 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:50:45 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:50:45 INFO   [wfs.json] - about to encode JSON
17 Sep 16:50:46 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:50:46 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:50:46 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:50:46 INFO   [wfs.json] - about to encode JSON
17 Sep 16:50:48 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:50:48 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:50:48 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:50:48 INFO   [wfs.json] - about to encode JSON
17 Sep 16:50:57 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer agi:invntr_hhtsgrnzen_kantonsgrenzstein
17 Sep 16:50:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:50:59 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:50:59 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:50:59 INFO   [wfs.json] - about to encode JSON
17 Sep 16:51:01 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:51:01 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:51:01 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:51:01 INFO   [wfs.json] - about to encode JSON
17 Sep 16:51:02 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /usr/local/geoserver/data/gwc-layers. Created: 0, removed: 0, modified: 1
17 Sep 16:51:02 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:51:02 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:51:02 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:51:02 INFO   [wfs.json] - about to encode JSON
17 Sep 16:51:09 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer agi:invntr_hhtsgrnzen_kantonsgrenzstein
17 Sep 16:51:12 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:51:12 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:51:12 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:51:12 INFO   [wfs.json] - about to encode JSON
17 Sep 16:51:12 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /usr/local/geoserver/data/gwc-layers. Created: 0, removed: 0, modified: 1
17 Sep 16:51:21 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer agi:invntr_hhtsgrnzen_kantonsgrenzstein
17 Sep 16:51:22 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /usr/local/geoserver/data/gwc-layers. Created: 0, removed: 0, modified: 1
17 Sep 16:51:30 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:51:30 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:51:30 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:51:30 INFO   [wfs.json] - about to encode JSON
17 Sep 16:53:49 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer agi:invntr_hhtsgrnzen_kantonsgrenzstein
17 Sep 16:53:52 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:53:52 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:53:52 ERROR  [renderer.lite] - null
java.lang.NullPointerException
	at java.base/java.util.Calendar.setTime(Unknown Source)
	at java.base/java.text.SimpleDateFormat.format(Unknown Source)
	at java.base/java.text.SimpleDateFormat.format(Unknown Source)
	at java.base/java.text.DateFormat.format(Unknown Source)
	at org.geotools.filter.function.FilterFunction_dateFormat.evaluate(FilterFunction_dateFormat.java:71)
	at org.geotools.filter.expression.ExpressionAbstract.evaluate(ExpressionAbstract.java:47)
	at org.geotools.data.transform.TransformFeatureIteratorWrapper.next(TransformFeatureIteratorWrapper.java:69)
	at org.geotools.data.transform.TransformFeatureIteratorWrapper.next(TransformFeatureIteratorWrapper.java:35)
	at org.geotools.data.transform.SimpleFeatureIteratorIterator.next(SimpleFeatureIteratorIterator.java:44)
	at org.geotools.data.transform.SimpleFeatureIteratorIterator.next(SimpleFeatureIteratorIterator.java:28)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2665)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2286)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:919)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:546)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:205)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:82)
	at org.geoserver.wms.featureinfo.VectorRenderingLayerIdentifier.identify(VectorRenderingLayerIdentifier.java:218)
	at org.geoserver.wms.GetFeatureInfo.execute(GetFeatureInfo.java:90)
	at org.geoserver.wms.GetFeatureInfo.run(GetFeatureInfo.java:48)
	at org.geoserver.wms.DefaultWebMapService.getFeatureInfo(DefaultWebMapService.java:266)
	at jdk.internal.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at com.sun.proxy.$Proxy84.getFeatureInfo(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor245.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:867)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
17 Sep 16:53:52 ERROR  [geoserver.ows] - 
org.geoserver.platform.ServiceException: Failed to run GetFeatureInfo on layer invntr_hhtsgrnzen_kantonsgrenzstein
	at org.geoserver.wms.GetFeatureInfo.execute(GetFeatureInfo.java:105)
	at org.geoserver.wms.GetFeatureInfo.run(GetFeatureInfo.java:48)
	at org.geoserver.wms.DefaultWebMapService.getFeatureInfo(DefaultWebMapService.java:266)
	at jdk.internal.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:38)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at com.sun.proxy.$Proxy84.getFeatureInfo(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor245.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:867)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.geoserver.platform.ServiceException: Rendering process failed. Layers: invntr_hhtsgrnzen_kantonsgrenzstein
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:595)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:205)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:82)
	at org.geoserver.wms.featureinfo.VectorRenderingLayerIdentifier.identify(VectorRenderingLayerIdentifier.java:218)
	at org.geoserver.wms.GetFeatureInfo.execute(GetFeatureInfo.java:90)
	... 125 more
Caused by: java.lang.NullPointerException
	at java.base/java.util.Calendar.setTime(Unknown Source)
	at java.base/java.text.SimpleDateFormat.format(Unknown Source)
	at java.base/java.text.SimpleDateFormat.format(Unknown Source)
	at java.base/java.text.DateFormat.format(Unknown Source)
	at org.geotools.filter.function.FilterFunction_dateFormat.evaluate(FilterFunction_dateFormat.java:71)
	at org.geotools.filter.expression.ExpressionAbstract.evaluate(ExpressionAbstract.java:47)
	at org.geotools.data.transform.TransformFeatureIteratorWrapper.next(TransformFeatureIteratorWrapper.java:69)
	at org.geotools.data.transform.TransformFeatureIteratorWrapper.next(TransformFeatureIteratorWrapper.java:35)
	at org.geotools.data.transform.SimpleFeatureIteratorIterator.next(SimpleFeatureIteratorIterator.java:44)
	at org.geotools.data.transform.SimpleFeatureIteratorIterator.next(SimpleFeatureIteratorIterator.java:28)
	at org.geotools.renderer.lite.StreamingRenderer.drawPlain(StreamingRenderer.java:2665)
	at org.geotools.renderer.lite.StreamingRenderer.processStylers(StreamingRenderer.java:2286)
	at org.geotools.renderer.lite.StreamingRenderer.paint(StreamingRenderer.java:919)
	at org.geoserver.wms.map.RenderedImageMapOutputFormat.produceMap(RenderedImageMapOutputFormat.java:546)
	... 129 more
17 Sep 16:53:52 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /usr/local/geoserver/data/gwc-layers. Created: 0, removed: 0, modified: 1
17 Sep 16:55:00 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer agi:invntr_hhtsgrnzen_kantonsgrenzstein
17 Sep 16:55:02 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /usr/local/geoserver/data/gwc-layers. Created: 0, removed: 0, modified: 1
17 Sep 16:55:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:55:04 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:55:04 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:55:04 INFO   [wfs.json] - about to encode JSON
17 Sep 16:58:28 ERROR  [geoserver.web] - Error saving layer
org.geoserver.catalog.ValidationException: Invalid CQL for jahreszahl source. Encountered "/" at line 1, column 14.
Was expecting one of:
    <STRING_LITERAL> ...
    "true" ...
    "false" ...
    "-" ...
    <INTEGER_LITERAL> ...
    <FLOATING_LITERAL> ...
    <DATE> ...
    <DATE_TIME> ...
    <IDENTIFIER> ...
    "(" ...
    "[" ...
     Parsing : jahreshttps://jenkins-agi-apps-production.apps.ocp.so.ch/zahl.
	at org.geoserver.catalog.impl.FeatureTypeValidator.validate(FeatureTypeValidator.java:157)
	at org.geoserver.catalog.impl.FeatureTypeValidator.validate(FeatureTypeValidator.java:69)
	at org.geoserver.catalog.impl.CatalogImpl.validate(CatalogImpl.java:515)
	at org.geoserver.security.SecureCatalogImpl.validate(SecureCatalogImpl.java:1320)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.validate(AbstractFilteredCatalog.java:633)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.validate(AbstractCatalogDecorator.java:274)
	at org.geoserver.web.data.resource.ResourceConfigurationPage.doSaveInternal(ResourceConfigurationPage.java:251)
	at org.geoserver.web.publish.PublishedConfigurationPage.doSave(PublishedConfigurationPage.java:333)
	at org.geoserver.web.data.resource.ResourceConfigurationPage.doSave(ResourceConfigurationPage.java:93)
	at org.geoserver.web.publish.PublishedConfigurationPage$7.onSubmitInternal(PublishedConfigurationPage.java:306)
	at org.geoserver.web.GeoserverAjaxSubmitLink.onSubmit(GeoserverAjaxSubmitLink.java:38)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:111)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior$AjaxFormSubmitter.onSubmit(AjaxFormSubmitBehavior.java:218)
	at org.apache.wicket.markup.html.form.Form.delegateSubmit(Form.java:1312)
	at org.apache.wicket.markup.html.form.Form.process(Form.java:976)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:797)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:174)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:155)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:601)
	at jdk.internal.reflect.GeneratedMethodAccessor306.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.wicket.RequestListenerInterface.internalInvoke(RequestListenerInterface.java:258)
	at org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:241)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.invokeListener(ListenerInterfaceRequestHandler.java:248)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:234)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:895)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
	at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:265)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:222)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:293)
	at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:261)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:203)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:159)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:328)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:89)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.flow.ControlFlowCallback.doFilter(ControlFlowCallback.java:264)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:122)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:106)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:97)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Unknown Source)
17 Sep 16:58:56 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer agi:invntr_hhtsgrnzen_kantonsgrenzstein
17 Sep 16:58:57 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /usr/local/geoserver/data/gwc-layers. Created: 0, removed: 0, modified: 1
17 Sep 16:58:58 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:58:58 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:58:58 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:58:58 INFO   [wfs.json] - about to encode JSON
17 Sep 16:59:27 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer agi:invntr_hhtsgrnzen_kantonsgrenzstein
17 Sep 16:59:27 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /usr/local/geoserver/data/gwc-layers. Created: 0, removed: 0, modified: 1
17 Sep 16:59:31 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:59:31 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:59:31 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 16:59:31 INFO   [wfs.json] - about to encode JSON
17 Sep 16:59:46 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 16:59:46 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 16:59:46 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 17:01:35 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer agi:invntr_hhtsgrnzen_kantonsgrenzstein
17 Sep 17:01:37 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 17:01:37 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 17:01:37 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 17:01:37 INFO   [wfs.json] - about to encode JSON
17 Sep 17:01:38 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /usr/local/geoserver/data/gwc-layers. Created: 0, removed: 0, modified: 1
17 Sep 17:01:38 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 17:01:38 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 17:01:38 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 17:01:38 INFO   [wfs.json] - about to encode JSON
17 Sep 17:02:02 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer agi:invntr_hhtsgrnzen_kantonsgrenzstein
17 Sep 17:02:03 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /usr/local/geoserver/data/gwc-layers. Created: 0, removed: 0, modified: 1
17 Sep 17:02:03 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer agi:invntr_hhtsgrnzen_kantonsgrenzstein
17 Sep 17:02:03 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer agi:invntr_hhtsgrnzen_kantonsgrenzstein
17 Sep 17:02:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 17:02:06 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 17:02:06 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 17:02:06 INFO   [wfs.json] - about to encode JSON
17 Sep 17:02:08 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /usr/local/geoserver/data/gwc-layers. Created: 0, removed: 0, modified: 1
17 Sep 17:02:25 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 17:02:25 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 17:02:25 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 17:02:25 INFO   [wfs.json] - about to encode JSON
17 Sep 17:02:31 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer agi:invntr_hhtsgrnzen_kantonsgrenzstein
17 Sep 17:02:33 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /usr/local/geoserver/data/gwc-layers. Created: 0, removed: 0, modified: 1
17 Sep 17:02:34 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 17:02:34 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 17:02:34 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 17:02:34 INFO   [wfs.json] - about to encode JSON
17 Sep 17:02:39 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer agi:invntr_hhtsgrnzen_kantonsgrenzstein
17 Sep 17:02:42 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 17:02:42 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 17:02:42 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 17:02:42 INFO   [wfs.json] - about to encode JSON
17 Sep 17:02:43 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /usr/local/geoserver/data/gwc-layers. Created: 0, removed: 0, modified: 1
17 Sep 17:04:19 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer agi:invntr_hhtsgrnzen_kantonsgrenzstein
17 Sep 17:04:23 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /usr/local/geoserver/data/gwc-layers. Created: 0, removed: 0, modified: 1
17 Sep 17:04:24 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 17:04:24 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 17:04:24 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 17:04:24 INFO   [wfs.json] - about to encode JSON
17 Sep 17:04:31 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 17:04:31 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 17:04:31 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2616029.2107360745 : 2619884.959512502, 1220585.024665918 : 1224440.7734423454]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2616029.2107360745,1220585.024665918,2619884.959512502,1224440.7734423454, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 17:07:43 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
17 Sep 17:07:44 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
17 Sep 17:07:44 CONFIG [org.geoserver] - Loading catalog /usr/local/geoserver/data
17 Sep 17:07:44 CONFIG [org.geoserver] - Loaded style 'simple_roads'
17 Sep 17:07:44 CONFIG [org.geoserver] - Loaded style 'pophatch'
17 Sep 17:07:44 CONFIG [org.geoserver] - Loaded style 'burg'
17 Sep 17:07:44 CONFIG [org.geoserver] - Loaded style 'giant_polygon'
17 Sep 17:07:44 CONFIG [org.geoserver] - Loaded style 'poi'
17 Sep 17:07:44 CONFIG [org.geoserver] - Loaded style 'population'
17 Sep 17:07:44 CONFIG [org.geoserver] - Loaded style 'polygon'
17 Sep 17:07:44 CONFIG [org.geoserver] - Loaded style 'raster'
17 Sep 17:07:44 CONFIG [org.geoserver] - Loaded style 'simple_streams'
17 Sep 17:07:44 CONFIG [org.geoserver] - Loaded style 'restricted'
17 Sep 17:07:44 CONFIG [org.geoserver] - Loaded style 'tiger_roads'
17 Sep 17:07:44 CONFIG [org.geoserver] - Loaded style 'point'
17 Sep 17:07:44 CONFIG [org.geoserver] - Loaded style 'grass'
17 Sep 17:07:44 CONFIG [org.geoserver] - Loaded style 'dem'
17 Sep 17:07:44 CONFIG [org.geoserver] - Loaded style 'poly_landmarks'
17 Sep 17:07:44 CONFIG [org.geoserver] - Loaded style 'green'
17 Sep 17:07:44 CONFIG [org.geoserver] - Loaded style 'capitals'
17 Sep 17:07:44 CONFIG [org.geoserver] - Loaded style 'generic'
17 Sep 17:07:44 CONFIG [org.geoserver] - Loaded style 'line'
17 Sep 17:07:44 CONFIG [org.geoserver] - Loaded style 'rain'
17 Sep 17:07:44 CONFIG [org.geoserver] - Loaded style 'cite_lakes'
17 Sep 17:07:44 CONFIG [org.geoserver] - Loaded default workspace 'agi'
17 Sep 17:07:45 CONFIG [org.geoserver] - Loaded workspace 'agi'
17 Sep 17:07:45 CONFIG [org.geoserver] - Loaded style 'grundstueck'
17 Sep 17:07:45 CONFIG [org.geoserver] - Loaded workspace 'tiger'
17 Sep 17:07:45 CONFIG [org.geoserver] - Loaded workspace 'nurc'
17 Sep 17:07:45 CONFIG [org.geoserver] - Loaded workspace 'cite'
17 Sep 17:07:45 CONFIG [org.geoserver] - Loaded workspace 'it.geosolutions'
17 Sep 17:07:45 CONFIG [org.geoserver] - Loaded workspace 'sf'
17 Sep 17:07:45 CONFIG [org.geoserver] - Loaded workspace 'sde'
17 Sep 17:07:45 CONFIG [org.geoserver] - Loaded workspace 'ne'
17 Sep 17:07:45 CONFIG [org.geoserver] - Loaded style 'populated_places'
17 Sep 17:07:45 CONFIG [org.geoserver] - Loaded style 'coastline'
17 Sep 17:07:45 CONFIG [org.geoserver] - Loaded style 'boundary_lines'
17 Sep 17:07:45 CONFIG [org.geoserver] - Loaded style 'disputed'
17 Sep 17:07:45 CONFIG [org.geoserver] - Loaded style 'countries'
17 Sep 17:07:45 CONFIG [org.geoserver] - Loaded style 'countries_mapcolor9'
17 Sep 17:07:45 CONFIG [org.geoserver] - Loaded workspace 'topp'
17 Sep 17:07:45 CONFIG [org.geoserver] - Loaded data store 'agi_mopublic_pub', enabled
17 Sep 17:07:45 CONFIG [org.geoserver] - Loaded feature type 'mopublic_grundstueck', enabled
17 Sep 17:07:45 CONFIG [org.geoserver] - Loaded layer 'mopublic_grundstueck'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded data store 'agi_inventar_hoheitsgrenzen_pub', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded feature type 'invntr_hhtsgrnzen_kantonsgrenzstein', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer 'invntr_hhtsgrnzen_kantonsgrenzstein'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded coverage store 'mosaic', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded coverage 'mosaic', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer 'mosaic'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer 'Arc_Sample'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded coverage store 'img_sample2', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded coverage 'Pk50095', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer 'Pk50095'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded coverage 'Img_Sample', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer 'Img_Sample'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded data store 'nyc', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer 'poly_landmarks'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded feature type 'poi', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer 'poi'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded feature type 'tiger_roads', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer 'tiger_roads'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded feature type 'giant_polygon', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer 'giant_polygon'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded data store 'sf', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded feature type 'restricted', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer 'restricted'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded feature type 'streams', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer 'streams'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded feature type 'bugsites', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer 'bugsites'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded feature type 'roads', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer 'roads'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded feature type 'archsites', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer 'archsites'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded coverage store 'sfdem', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded coverage 'sfdem', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer 'sfdem'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded data store 'taz_shapes', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer 'tasmania_water_bodies'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer 'tasmania_cities'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer 'tasmania_roads'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded data store 'states_shapefile', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded feature type 'states', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer 'states'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded data store 'NaturalEarth', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded feature type 'boundary_lines', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer 'boundary_lines'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded feature type 'disputed_areas', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer 'disputed_areas'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded feature type 'coastlines', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer 'coastlines'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded feature type 'populated_places', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer 'populated_places'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded feature type 'countries', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer 'countries'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer group 'world'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer group 'spearfish'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer group 'tasmania'
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded layer group 'tiger-ny'
17 Sep 17:07:46 CONFIG [org.geoserver] - Read catalog in 1.322 s
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded service 'wms', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl--3ef31051:182c1e8b194:-8000', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded service 'WFSInfoImpl-1c443fee:182c0f3f209:-7f97', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded service 'WCSInfoImpl-1c443fee:182c0f3f209:-7f96', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded service 'WMSInfoImpl-1c443fee:182c0f3f209:-7f99', enabled
17 Sep 17:07:46 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl-1c443fee:182c0f3f209:-7f98', enabled
17 Sep 17:07:46 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/usr/local/geoserver/data/gwc'.
17 Sep 17:07:46 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
17 Sep 17:07:46 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
17 Sep 17:07:46 CONFIG [config.XMLConfiguration] - Initializing GridSets from gwc
17 Sep 17:07:46 CONFIG [config.XMLConfiguration] - Initializing layers from gwc
17 Sep 17:07:46 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
17 Sep 17:07:46 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
17 Sep 17:07:46 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
17 Sep 17:07:46 CONFIG [gwc.layer] - Loaded 30 tile layers in 25.43 ms
17 Sep 17:07:46 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
17 Sep 17:07:46 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOSERVER_DATA_DIR set to /usr/local/geoserver/data, using it as the default prefix.
17 Sep 17:07:46 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
17 Sep 17:07:46 WARN   [gce.imagemosaic] - Unable to set ordering between tiff readers spi
17 Sep 17:07:47 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 17:07:47 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/usr/local/geoserver/data/gwc'.
17 Sep 17:07:47 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/usr/local/geoserver/data/gwc'.
17 Sep 17:07:47 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Sep 17:07:47 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Sep 17:07:47 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Sep 17:07:47 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
17 Sep 17:07:47 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
17 Sep 17:07:47 CONFIG [diskquota.DiskQuotaMonitor] - 30 layers attached to global quota 500.0 MB
17 Sep 17:07:47 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
17 Sep 17:07:47 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
17 Sep 17:07:47 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
17 Sep 17:07:47 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
17 Sep 17:07:48 CONFIG [geoserver.security] - Start reloading user/groups for service named default
17 Sep 17:07:48 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
17 Sep 17:07:49 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
17 Sep 17:07:49 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
17 Sep 17:07:54 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 17:07:55 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 17:07:55 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 17:07:55 INFO   [wfs.json] - about to encode JSON
17 Sep 17:08:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 17:08:00 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 17:08:00 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 17:08:00 INFO   [wfs.json] - about to encode JSON
17 Sep 17:09:09 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
17 Sep 17:09:10 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
17 Sep 17:09:10 CONFIG [org.geoserver] - Loading catalog /usr/local/geoserver/data
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'pophatch'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'simple_roads'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'burg'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'giant_polygon'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'population'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'poi'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'polygon'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'raster'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'restricted'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'simple_streams'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'tiger_roads'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'point'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'grass'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'dem'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'poly_landmarks'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'generic'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'green'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'capitals'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'line'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'cite_lakes'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'rain'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded default workspace 'agi'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded workspace 'nurc'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded workspace 'tiger'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded workspace 'cite'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded workspace 'it.geosolutions'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded workspace 'sf'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded workspace 'sde'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded workspace 'topp'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded workspace 'ne'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'populated_places'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'coastline'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'boundary_lines'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'countries_mapcolor9'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'disputed'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'countries'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded workspace 'agi'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded style 'grundstueck'
17 Sep 17:09:10 CONFIG [org.geoserver] - Loaded data store 'agi_mopublic_pub', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded feature type 'mopublic_grundstueck', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer 'mopublic_grundstueck'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded data store 'agi_inventar_hoheitsgrenzen_pub', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded feature type 'invntr_hhtsgrnzen_kantonsgrenzstein', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer 'invntr_hhtsgrnzen_kantonsgrenzstein'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer 'Arc_Sample'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded coverage store 'mosaic', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded coverage 'mosaic', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer 'mosaic'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded coverage 'Img_Sample', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer 'Img_Sample'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded coverage store 'img_sample2', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded coverage 'Pk50095', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer 'Pk50095'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded data store 'nyc', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded feature type 'poi', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer 'poi'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer 'poly_landmarks'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded feature type 'tiger_roads', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer 'tiger_roads'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded feature type 'giant_polygon', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer 'giant_polygon'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded data store 'sf', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded feature type 'restricted', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer 'restricted'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded feature type 'bugsites', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer 'bugsites'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded feature type 'streams', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer 'streams'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded feature type 'roads', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer 'roads'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded feature type 'archsites', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer 'archsites'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded coverage store 'sfdem', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded coverage 'sfdem', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer 'sfdem'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded data store 'taz_shapes', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer 'tasmania_roads'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer 'tasmania_cities'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer 'tasmania_water_bodies'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded data store 'states_shapefile', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded feature type 'states', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer 'states'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded data store 'NaturalEarth', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded feature type 'boundary_lines', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer 'boundary_lines'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded feature type 'disputed_areas', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer 'disputed_areas'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded feature type 'coastlines', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer 'coastlines'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded feature type 'countries', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer 'countries'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded feature type 'populated_places', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer 'populated_places'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer group 'world'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer group 'tiger-ny'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer group 'tasmania'
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded layer group 'spearfish'
17 Sep 17:09:11 CONFIG [org.geoserver] - Read catalog in 1.111 s
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded service 'wms', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl--3ef31051:182c1e8b194:-8000', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded service 'WFSInfoImpl-1c443fee:182c0f3f209:-7f97', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded service 'WCSInfoImpl-1c443fee:182c0f3f209:-7f96', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded service 'WMSInfoImpl-1c443fee:182c0f3f209:-7f99', enabled
17 Sep 17:09:11 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl-1c443fee:182c0f3f209:-7f98', enabled
17 Sep 17:09:11 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/usr/local/geoserver/data/gwc'.
17 Sep 17:09:11 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
17 Sep 17:09:11 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
17 Sep 17:09:12 CONFIG [config.XMLConfiguration] - Initializing GridSets from gwc
17 Sep 17:09:12 CONFIG [config.XMLConfiguration] - Initializing layers from gwc
17 Sep 17:09:12 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
17 Sep 17:09:12 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
17 Sep 17:09:12 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
17 Sep 17:09:12 CONFIG [gwc.layer] - Loaded 30 tile layers in 16.18 ms
17 Sep 17:09:12 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
17 Sep 17:09:12 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOSERVER_DATA_DIR set to /usr/local/geoserver/data, using it as the default prefix.
17 Sep 17:09:12 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
17 Sep 17:09:12 WARN   [gce.imagemosaic] - Unable to set ordering between tiff readers spi
17 Sep 17:09:12 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 17:09:12 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/usr/local/geoserver/data/gwc'.
17 Sep 17:09:12 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/usr/local/geoserver/data/gwc'.
17 Sep 17:09:12 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Sep 17:09:12 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Sep 17:09:12 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Sep 17:09:12 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
17 Sep 17:09:12 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
17 Sep 17:09:12 CONFIG [diskquota.DiskQuotaMonitor] - 30 layers attached to global quota 500.0 MB
17 Sep 17:09:13 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
17 Sep 17:09:13 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
17 Sep 17:09:13 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
17 Sep 17:09:13 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
17 Sep 17:09:14 CONFIG [geoserver.security] - Start reloading user/groups for service named default
17 Sep 17:09:14 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
17 Sep 17:09:14 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
17 Sep 17:09:14 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
17 Sep 17:09:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 17:09:19 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 17:09:19 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 17:09:19 INFO   [wfs.json] - about to encode JSON
17 Sep 17:09:21 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 17:09:21 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 17:09:21 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 17:09:21 INFO   [wfs.json] - about to encode JSON
17 Sep 17:09:57 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
17 Sep 17:09:57 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loading catalog /usr/local/geoserver/data
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'simple_roads'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'pophatch'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'burg'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'giant_polygon'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'polygon'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'population'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'raster'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'simple_streams'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'poi'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'restricted'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'tiger_roads'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'point'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'grass'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'poly_landmarks'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'dem'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'generic'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'green'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'capitals'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'line'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'cite_lakes'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'rain'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded default workspace 'agi'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded workspace 'agi'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'grundstueck'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded workspace 'nurc'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded workspace 'cite'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded workspace 'tiger'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded workspace 'sde'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded workspace 'it.geosolutions'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded workspace 'topp'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded workspace 'ne'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'populated_places'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'coastline'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'boundary_lines'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'countries_mapcolor9'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'countries'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded style 'disputed'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded workspace 'sf'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded data store 'agi_inventar_hoheitsgrenzen_pub', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded feature type 'invntr_hhtsgrnzen_kantonsgrenzstein', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded layer 'invntr_hhtsgrnzen_kantonsgrenzstein'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded data store 'agi_mopublic_pub', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded feature type 'mopublic_grundstueck', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded layer 'mopublic_grundstueck'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded coverage store 'mosaic', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded coverage 'mosaic', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded layer 'mosaic'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded coverage store 'img_sample2', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded coverage 'Pk50095', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded layer 'Pk50095'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded layer 'Arc_Sample'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded coverage 'Img_Sample', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded layer 'Img_Sample'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded data store 'nyc', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded feature type 'giant_polygon', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded layer 'giant_polygon'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded layer 'poly_landmarks'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded feature type 'poi', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded layer 'poi'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded feature type 'tiger_roads', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded layer 'tiger_roads'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded data store 'sf', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded feature type 'streams', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded layer 'streams'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded feature type 'restricted', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded layer 'restricted'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded feature type 'bugsites', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded layer 'bugsites'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded feature type 'archsites', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded layer 'archsites'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded feature type 'roads', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded layer 'roads'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded coverage store 'sfdem', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded coverage 'sfdem', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded layer 'sfdem'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded data store 'taz_shapes', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded layer 'tasmania_water_bodies'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded layer 'tasmania_cities'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded layer 'tasmania_roads'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded data store 'states_shapefile', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded feature type 'states', enabled
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded layer 'states'
17 Sep 17:09:58 CONFIG [org.geoserver] - Loaded data store 'NaturalEarth', enabled
17 Sep 17:09:59 CONFIG [org.geoserver] - Loaded feature type 'boundary_lines', enabled
17 Sep 17:09:59 CONFIG [org.geoserver] - Loaded layer 'boundary_lines'
17 Sep 17:09:59 CONFIG [org.geoserver] - Loaded feature type 'disputed_areas', enabled
17 Sep 17:09:59 CONFIG [org.geoserver] - Loaded layer 'disputed_areas'
17 Sep 17:09:59 CONFIG [org.geoserver] - Loaded feature type 'coastlines', enabled
17 Sep 17:09:59 CONFIG [org.geoserver] - Loaded layer 'coastlines'
17 Sep 17:09:59 CONFIG [org.geoserver] - Loaded feature type 'countries', enabled
17 Sep 17:09:59 CONFIG [org.geoserver] - Loaded layer 'countries'
17 Sep 17:09:59 CONFIG [org.geoserver] - Loaded feature type 'populated_places', enabled
17 Sep 17:09:59 CONFIG [org.geoserver] - Loaded layer 'populated_places'
17 Sep 17:09:59 CONFIG [org.geoserver] - Loaded layer group 'world'
17 Sep 17:09:59 CONFIG [org.geoserver] - Loaded layer group 'spearfish'
17 Sep 17:09:59 CONFIG [org.geoserver] - Loaded layer group 'tiger-ny'
17 Sep 17:09:59 CONFIG [org.geoserver] - Loaded layer group 'tasmania'
17 Sep 17:09:59 CONFIG [org.geoserver] - Read catalog in 1.023 s
17 Sep 17:09:59 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
17 Sep 17:09:59 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
17 Sep 17:09:59 CONFIG [org.geoserver] - Loaded service 'wms', enabled
17 Sep 17:09:59 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl--3ef31051:182c1e8b194:-8000', enabled
17 Sep 17:09:59 CONFIG [org.geoserver] - Loaded service 'WFSInfoImpl-1c443fee:182c0f3f209:-7f97', enabled
17 Sep 17:09:59 CONFIG [org.geoserver] - Loaded service 'WCSInfoImpl-1c443fee:182c0f3f209:-7f96', enabled
17 Sep 17:09:59 CONFIG [org.geoserver] - Loaded service 'WMSInfoImpl-1c443fee:182c0f3f209:-7f99', enabled
17 Sep 17:09:59 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl-1c443fee:182c0f3f209:-7f98', enabled
17 Sep 17:09:59 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/usr/local/geoserver/data/gwc'.
17 Sep 17:09:59 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
17 Sep 17:09:59 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
17 Sep 17:09:59 CONFIG [config.XMLConfiguration] - Initializing GridSets from gwc
17 Sep 17:09:59 CONFIG [config.XMLConfiguration] - Initializing layers from gwc
17 Sep 17:09:59 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
17 Sep 17:09:59 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
17 Sep 17:09:59 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
17 Sep 17:09:59 CONFIG [gwc.layer] - Loaded 30 tile layers in 19.03 ms
17 Sep 17:09:59 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
17 Sep 17:09:59 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOSERVER_DATA_DIR set to /usr/local/geoserver/data, using it as the default prefix.
17 Sep 17:09:59 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
17 Sep 17:09:59 WARN   [gce.imagemosaic] - Unable to set ordering between tiff readers spi
17 Sep 17:09:59 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 17:10:00 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/usr/local/geoserver/data/gwc'.
17 Sep 17:10:00 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/usr/local/geoserver/data/gwc'.
17 Sep 17:10:00 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Sep 17:10:00 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Sep 17:10:00 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Sep 17:10:00 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
17 Sep 17:10:00 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
17 Sep 17:10:00 CONFIG [diskquota.DiskQuotaMonitor] - 30 layers attached to global quota 500.0 MB
17 Sep 17:10:00 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
17 Sep 17:10:00 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
17 Sep 17:10:00 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
17 Sep 17:10:00 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
17 Sep 17:10:01 CONFIG [geoserver.security] - Start reloading user/groups for service named default
17 Sep 17:10:01 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
17 Sep 17:10:01 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
17 Sep 17:10:01 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
17 Sep 17:10:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 17:10:04 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 17:10:04 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 17:10:04 INFO   [wfs.json] - about to encode JSON
17 Sep 17:10:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 17:10:08 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 17:10:08 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 17:10:08 INFO   [wfs.json] - about to encode JSON
17 Sep 17:10:09 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 17:10:09 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 17:10:09 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 17:10:09 INFO   [wfs.json] - about to encode JSON
17 Sep 17:10:09 INFO   [geoserver.wms] - 
Request: getServiceInfo
17 Sep 17:10:09 CONFIG [geoserver.flow] - Control-flow inactive, there are no configured rules
17 Sep 17:10:09 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[2614991.6249525906 : 2616919.499340804, 1235881.6115957745 : 1237809.4859839883]
 layers: invntr_hhtsgrnzen_kantonsgrenzstein
 styles: point
	InfoFormat = application/json
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@16bb99a2]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=application/json, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:2056, BBOX=2614991.6249525906,1235881.6115957745,2616919.499340804,1237809.4859839883, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=agi:invntr_hhtsgrnzen_kantonsgrenzstein, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
17 Sep 17:10:09 INFO   [wfs.json] - about to encode JSON
